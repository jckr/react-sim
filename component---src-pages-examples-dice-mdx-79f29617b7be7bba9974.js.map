{"version":3,"sources":["webpack:///./src/components/examples/dice.js","webpack:///./src/pages/examples/dice.mdx"],"names":["roll","random","Math","ceil","updateDice","data","tick","nbDice","params","lastTotals","totals","total","rolls","i","push","updatedTotals","average","initDice","Die","value","dotStyle","background","width","height","borderRadius","position","top","bottom","right","left","mid","style","marginRight","border","Bar","label","max","nbRolls","nbValues","theme","color","colors","primary","flexDirection","sx","justifyContent","alignItems","backgroundColor","fontSize","min","DiceFrame","render","this","props","minValue","Number","bars","Array","fill","map","d","index","key","bar","React","Component","Dice","useThemeUI","auto","controls","param","maxValue","resetOnChange","updateData","maxTime","initData","initialParams","_frontmatter","layoutProps","MDXContent","components","mdxType","isMDXComponent"],"mappings":"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","file":"component---src-pages-examples-dice-mdx-79f29617b7be7bba9974.js","sourcesContent":["import React from 'react';\nimport { useThemeUI } from 'theme-ui';\nimport { Flex } from 'rebass';\n\nimport Model from './framed-model';\n\n// helpers\n\nconst roll = random => Math.ceil(random() * 6);\n\nexport function updateDice(\n  { data, tick, params: { nbDice } },\n  random = Math.random\n) {\n  const lastTotals = data.totals;\n\n  // we roll the dice...\n  let total = 0;\n  const rolls = [];\n  for (let i = 0; i < nbDice; i++) {\n    rolls.push(roll(random));\n    total += rolls[i];\n  }\n\n  // and update the totals\n  const updatedTotals = {\n    ...lastTotals,\n    [total]: (lastTotals[total] || 0) + 1,\n  };\n\n  const average = (data.average * (tick - 1) + data.total) / tick;\n\n  return { rolls, average, total, totals: updatedTotals };\n}\n\nexport function initDice({ nbDice }) {\n  return {\n    rolls: [],\n    average: 3.5 * nbDice,\n    total: 0,\n    totals: {},\n  };\n}\n\nexport const Die = ({ value }) => {\n  const dotStyle = {\n    background: '#000',\n    width: 3,\n    height: 3,\n    borderRadius: '100%',\n    position: 'absolute',\n  };\n  const top = { top: 3 };\n  const bottom = { bottom: 3 };\n  const right = { right: 3 };\n  const left = { left: 3 };\n  const mid = { top: 8 };\n  const center = { left: 8 };\n  return (\n    <div\n      style={{\n        width: 21,\n        height: 21,\n        marginRight: 10,\n        position: 'relative',\n        border: '1px solid #000',\n        borderRadius: '3px',\n      }}\n    >\n      {value !== 1 && <div style={{ ...dotStyle, ...top, ...left }} />}\n      {value > 3 && <div style={{ ...dotStyle, ...top, ...right }} />}\n      {value === 6 && <div style={{ ...dotStyle, ...mid, ...left }} />}\n      {value % 2 === 1 && <div style={{ ...dotStyle, ...mid, ...center }} />}\n      {value === 6 && <div style={{ ...dotStyle, ...mid, ...right }} />}\n      {value > 3 && <div style={{ ...dotStyle, ...bottom, ...left }} />}\n      {value !== 1 && <div style={{ ...dotStyle, ...bottom, ...right }} />}\n    </div>\n  );\n};\n\nconst Bar = ({ label, max, nbRolls, nbValues, theme }) => {\n  const height = max ? (50 * nbRolls) / max : 0;\n  const width = 350 / nbValues;\n  const color = theme?.colors?.primary || '#33f';\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex\n        flexDirection=\"row\"\n        sx={{\n          justifyContent: 'center',\n          alignItems: 'flex-end',\n          width,\n          height: '50px',\n        }}\n      >\n        <div style={{ width: width * 0.8, height, backgroundColor: color }} />\n      </Flex>\n      <Flex\n        flexDirection=\"row\"\n        sx={{\n          justifyContent: 'center',\n          fontSize: `${Math.min(350 / (1.5 * nbValues), 12)}px`,\n        }}\n      >\n        {label}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport class DiceFrame extends React.Component {\n  render() {\n    if (this.props.data === null) {\n      return null;\n    }\n    const {\n      data,\n      params: { nbDice },\n      theme,\n    } = this.props;\n\n    const minValue = Number(nbDice);\n    const maxValue = minValue * 6;\n    const nbValues = maxValue - minValue + 1;\n\n    const { rolls, totals } = data;\n    let max = 0;\n    const bars = Array(nbValues)\n      .fill(0)\n      .map((d, i) => {\n        const label = minValue + i;\n        const nbRolls = totals[label] || 0;\n        max = Math.max(max, nbRolls);\n        return { label, nbRolls };\n      });\n\n    return (\n      <Flex\n        flexDirection=\"column\"\n        sx={{ justifyContent: 'space-between', height: '140px' }}\n      >\n        <Flex flexDirection=\"row\">\n          {rolls.map((value, index) => (\n            <Die value={value} key={`k-${index}`} />\n          ))}\n        </Flex>\n        <Flex\n          flexDirection=\"row\"\n          sx={{ alignItems: 'flex-end', height: '80px' }}\n        >\n          {bars.map(bar => (\n            <Bar\n              {...bar}\n              key={bar.label}\n              max={max}\n              nbValues={nbValues}\n              theme={theme}\n            />\n          ))}\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nconst Dice = () => {\n  const context = useThemeUI();\n  const { theme } = context;\n  return (\n    <>\n      <Model\n        theme={theme}\n        auto={false}\n        controls={{\n          param: 'nbDice',\n          minValue: 1,\n          maxValue: 6,\n          resetOnChange: true,\n          label: 'Number of dice per roll',\n        }}\n        updateData={updateDice}\n        maxTime={1000}\n        initData={initDice}\n        initialParams={{\n          nbDice: 5,\n        }}\n      >\n        <DiceFrame theme={theme} />\n      </Model>\n    </>\n  );\n};\n\nexport default Dice;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Dice from '../../components/examples/dice';\nexport const _frontmatter = {\n  \"Title\": \"Dice\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"dice\"\n    }}>{`Dice`}</h1>\n    <Dice mdxType=\"Dice\" />\n    <p>{`This simulation just throws a certain number of dice and tallies the result over time.\nFor just one die, the expected results are that we'll get the same number of rolls for each value.\nFor several dice, the bars are expected to follow a nice bell curve.`}</p>\n    <p>{`But actually, the shape of the results is pretty different from that. Random functions are not perfect.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}