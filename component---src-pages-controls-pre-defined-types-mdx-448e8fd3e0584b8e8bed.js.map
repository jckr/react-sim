{"version":3,"sources":["webpack:///./src/pages/controls/pre-defined-types.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sQAKO,IAAMA,EAAe,CAC1B,MAAS,qBAQLC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,mDACA,mGAAkF,0BAAYC,WAAW,KAAvB,YAAlF,qBAA4J,0BAAYA,WAAW,KAAvB,SAA5J,KACA,oEAAmD,kBAAIA,WAAW,KAAf,6BAAnD,KACA,iDACA,sBACE,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,uBADQ,aAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,oBADQ,UAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,qBADQ,WAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,oBADQ,UAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,qBADQ,WAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,oBADQ,UAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,oBADQ,WAItB,4BAAW,0BAAYA,WAAW,KAAvB,YAAX,kBACA,sBACE,kBAAIA,WAAW,MAAf,oEACA,kBAAIA,WAAW,MAAf,kCAAuD,+BAAGA,WAAW,MAAS,CAC1E,KAAQ,iCAD2C,sBAIzD,sCACA,iDAAgC,0BAAYA,WAAW,KAAvB,SAAhC,gCACA,sBACE,kBAAIA,WAAW,MAAf,0JACA,kBAAIA,WAAW,MAAf,6FACA,kBAAIA,WAAW,MAAf,6EAAkG,0BAAYA,WAAW,MAAvB,SAAlG,kBACA,kBAAIA,WAAW,MAAf,6DAAkF,0BAAYA,WAAW,MAAvB,SAAlF,kBACA,kBAAIA,WAAW,MAAf,8CAAmE,+BAAGA,WAAW,MAAS,CACtF,KAAQ,yBADuD,UAAnE,kBAEsC,0BAAYA,WAAW,MAAvB,MAFtC,aAQNJ,EAAWK,gBAAiB","file":"component---src-pages-controls-pre-defined-types-mdx-448e8fd3e0584b8e8bed.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"Title\": \"Pre-defined types\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Pre-defined control types`}</h1>\n    <p>{`If you want more than the default timer, the next simpler way is to pass a `}<inlineCode parentName=\"p\">{`controls`}</inlineCode>{` property to your `}<inlineCode parentName=\"p\">{`Model`}</inlineCode>{`.`}</p>\n    <p>{`By doing so, you can use one or more of the `}<em parentName=\"p\">{`pre-defined control types`}</em>{`.`}</p>\n    <p>{`These control types are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/controls/checkbox\"\n        }}>{`Checkbox`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/controls/input\"\n        }}>{`Input`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/controls/toggle\"\n        }}>{`Toggle`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/controls/radio\"\n        }}>{`Radio`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/controls/select\"\n        }}>{`Select`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/controls/range\"\n        }}>{`Range`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/controls/timer\"\n        }}>{`Timer`}</a></li>\n    </ul>\n    <p>{`The `}<inlineCode parentName=\"p\">{`controls`}</inlineCode>{` props can be:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`an object, in which case you are specifying a single control, or`}</li>\n      <li parentName=\"ul\">{`an array, which is how you can `}<a parentName=\"li\" {...{\n          \"href\": \"/controls/arranging-controls\"\n        }}>{`arrange controls`}</a></li>\n    </ul>\n    <h1>{`Common props`}</h1>\n    <p>{`All controls, except the `}<inlineCode parentName=\"p\">{`Timer`}</inlineCode>{`, have the following props -`}</p>\n    <ul>\n      <li parentName=\"ul\">{`type: (one of 'checkbox', 'input', 'radio', 'range', 'select', 'timer' or 'toggle', 'timer' by default) - defines the kind of control we're describing`}</li>\n      <li parentName=\"ul\">{`param: (string) The name of the parameter in params that will be changed by this control,`}</li>\n      <li parentName=\"ul\">{`label: (string) The description of this control in the UI. If left blank, `}<inlineCode parentName=\"li\">{`param`}</inlineCode>{` will be used.`}</li>\n      <li parentName=\"ul\">{`name: (string) The name of the control. If not specified, `}<inlineCode parentName=\"li\">{`label`}</inlineCode>{` will be used.`}</li>\n      <li parentName=\"ul\">{`sx: (object) All controls are created with `}<a parentName=\"li\" {...{\n          \"href\": \"https://rebassjs.org\"\n        }}>{`rebass`}</a>{`, and can take `}<inlineCode parentName=\"li\">{`sx`}</inlineCode>{` props.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}