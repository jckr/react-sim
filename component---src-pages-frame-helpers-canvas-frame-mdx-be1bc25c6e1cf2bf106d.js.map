{"version":3,"sources":["webpack:///./src/components/examples/dice.js","webpack:///./src/pages/frame-helpers/canvas-frame.mdx","webpack:///./src/components/examples/frame-helpers-examples.js","webpack:///./src/pages/api/round-rectangle.mdx","webpack:///./src/pages/api/draw.mdx","webpack:///./src/pages/api/circle.mdx","webpack:///./src/pages/api/canvas-frame.mdx"],"names":["roll","random","Math","ceil","updateDice","data","tick","nbDice","params","lastTotals","totals","total","rolls","i","push","updatedTotals","average","initDice","Die","value","dotStyle","background","width","height","borderRadius","position","top","bottom","right","left","mid","style","marginRight","border","Bar","label","max","nbRolls","nbValues","theme","color","colors","primary","flexDirection","sx","justifyContent","alignItems","backgroundColor","fontSize","min","DiceFrame","render","this","props","minValue","Number","bars","Array","fill","map","d","index","key","bar","React","Component","Dice","useThemeUI","auto","controls","param","maxValue","resetOnChange","updateData","maxTime","initData","initialParams","_frontmatter","layoutProps","MDXContent","components","mdxType","parentName","isMDXComponent","initDataCF","balls","speed","x","y","c","floor","vx","vy","updateDataGF","ball","draw","ctx","cachedData","circle","clearRect","age","globalAlpha","r","forEach","fillStyle","CanvasFrameExample","HOCDieFrame","withFrame","series","accessor","toFixed","stackedSeries","keys","slice","dots","String","TimeSeriesExample","fontWeight","stacked"],"mappings":"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","file":"component---src-pages-frame-helpers-canvas-frame-mdx-be1bc25c6e1cf2bf106d.js","sourcesContent":["import React from 'react';\nimport { useThemeUI } from 'theme-ui';\nimport { Flex } from 'rebass';\n\nimport Model from './framed-model';\n\n// helpers\n\nconst roll = random => Math.ceil(random() * 6);\n\nexport function updateDice(\n  { data, tick, params: { nbDice } },\n  random = Math.random\n) {\n  const lastTotals = data.totals;\n\n  // we roll the dice...\n  let total = 0;\n  const rolls = [];\n  for (let i = 0; i < nbDice; i++) {\n    rolls.push(roll(random));\n    total += rolls[i];\n  }\n\n  // and update the totals\n  const updatedTotals = {\n    ...lastTotals,\n    [total]: (lastTotals[total] || 0) + 1,\n  };\n\n  const average = (data.average * (tick - 1) + data.total) / tick;\n\n  return { rolls, average, total, totals: updatedTotals };\n}\n\nexport function initDice({ nbDice }) {\n  return {\n    rolls: [],\n    average: 3.5 * nbDice,\n    total: 0,\n    totals: {},\n  };\n}\n\nexport const Die = ({ value }) => {\n  const dotStyle = {\n    background: '#000',\n    width: 3,\n    height: 3,\n    borderRadius: '100%',\n    position: 'absolute',\n  };\n  const top = { top: 3 };\n  const bottom = { bottom: 3 };\n  const right = { right: 3 };\n  const left = { left: 3 };\n  const mid = { top: 8 };\n  const center = { left: 8 };\n  return (\n    <div\n      style={{\n        width: 21,\n        height: 21,\n        marginRight: 10,\n        position: 'relative',\n        border: '1px solid #000',\n        borderRadius: '3px',\n      }}\n    >\n      {value !== 1 && <div style={{ ...dotStyle, ...top, ...left }} />}\n      {value > 3 && <div style={{ ...dotStyle, ...top, ...right }} />}\n      {value === 6 && <div style={{ ...dotStyle, ...mid, ...left }} />}\n      {value % 2 === 1 && <div style={{ ...dotStyle, ...mid, ...center }} />}\n      {value === 6 && <div style={{ ...dotStyle, ...mid, ...right }} />}\n      {value > 3 && <div style={{ ...dotStyle, ...bottom, ...left }} />}\n      {value !== 1 && <div style={{ ...dotStyle, ...bottom, ...right }} />}\n    </div>\n  );\n};\n\nconst Bar = ({ label, max, nbRolls, nbValues, theme }) => {\n  const height = max ? (50 * nbRolls) / max : 0;\n  const width = 350 / nbValues;\n  const color = theme?.colors?.primary || '#33f';\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex\n        flexDirection=\"row\"\n        sx={{\n          justifyContent: 'center',\n          alignItems: 'flex-end',\n          width,\n          height: '50px',\n        }}\n      >\n        <div style={{ width: width * 0.8, height, backgroundColor: color }} />\n      </Flex>\n      <Flex\n        flexDirection=\"row\"\n        sx={{\n          justifyContent: 'center',\n          fontSize: `${Math.min(350 / (1.5 * nbValues), 12)}px`,\n        }}\n      >\n        {label}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport class DiceFrame extends React.Component {\n  render() {\n    if (this.props.data === null) {\n      return null;\n    }\n    const {\n      data,\n      params: { nbDice },\n      theme,\n    } = this.props;\n\n    const minValue = Number(nbDice);\n    const maxValue = minValue * 6;\n    const nbValues = maxValue - minValue + 1;\n\n    const { rolls, totals } = data;\n    let max = 0;\n    const bars = Array(nbValues)\n      .fill(0)\n      .map((d, i) => {\n        const label = minValue + i;\n        const nbRolls = totals[label] || 0;\n        max = Math.max(max, nbRolls);\n        return { label, nbRolls };\n      });\n\n    return (\n      <Flex\n        flexDirection=\"column\"\n        sx={{ justifyContent: 'space-between', height: '140px' }}\n      >\n        <Flex flexDirection=\"row\">\n          {rolls.map((value, index) => (\n            <Die value={value} key={`k-${index}`} />\n          ))}\n        </Flex>\n        <Flex\n          flexDirection=\"row\"\n          sx={{ alignItems: 'flex-end', height: '80px' }}\n        >\n          {bars.map(bar => (\n            <Bar\n              {...bar}\n              key={bar.label}\n              max={max}\n              nbValues={nbValues}\n              theme={theme}\n            />\n          ))}\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nconst Dice = props => {\n  const context = useThemeUI();\n  const { theme } = context;\n  return (\n    <>\n      <Model\n        theme={theme}\n        auto={false}\n        controls={{\n          param: 'nbDice',\n          minValue: 1,\n          maxValue: 6,\n          resetOnChange: true,\n          label: 'Number of dice per roll',\n        }}\n        updateData={updateDice}\n        maxTime={1000}\n        initData={initDice}\n        initialParams={{\n          nbDice: 5,\n        }}\n        {...props}\n      >\n        <DiceFrame theme={theme} />\n      </Model>\n    </>\n  );\n};\n\nexport default Dice;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { CanvasFrameExample } from '../../components/examples/frame-helpers-examples.js';\nimport CanvasFrameAPI from '../api/canvas-frame.mdx';\nimport DrawAPI from '../api/draw.mdx';\nimport CircleAPI from '../api/circle.mdx';\nimport RoundRectangleAPI from '../api/round-rectangle.mdx';\nexport const _frontmatter = {\n  \"Title\": \"Canvas Frame\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p><inlineCode parentName=\"p\">{`CanvasFrame`}</inlineCode>{` is a `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/frame-helpers\"\n      }}>{`frame helper`}</a>{` that makes it easier to use canvas with react-sim.`}</p>\n    <p>{`It's used in many of the examples such as `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/examples/chaos-game\"\n      }}>{`Chaos Game`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/examples/percolation\"\n      }}>{`Percolation`}</a>{`) `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/examples/epidemic\"\n      }}>{`Epidemic simulation`}</a>{`, etc.`}</p>\n    <CanvasFrameExample mdxType=\"CanvasFrameExample\" />\n    <h1 {...{\n      \"id\": \"canvasframe-properties\"\n    }}>{`CanvasFrame properties`}</h1>\n    <p>{`Its properties are:`}</p>\n    <CanvasFrameAPI mdxType=\"CanvasFrameAPI\" />\n    <h1 {...{\n      \"id\": \"the-draw-function\"\n    }}>{`the draw function`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`draw`}</inlineCode>{` function does all the heavy lifting.`}</p>\n    <p>{`Its argument is an object with the following properties:`}</p>\n    <DrawAPI mdxType=\"DrawAPI\" />\n    <p><inlineCode parentName=\"p\">{`circle`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`roundRectangle`}</inlineCode>{` are helper functions to make it easier to draw circles and rounded rectangles with canvas.`}</p>\n    <p>{`Both take an object as argument with the following properties:`}</p>\n    <CircleAPI mdxType=\"CircleAPI\" />\n    <RoundRectangleAPI mdxType=\"RoundRectangleAPI\" />\n    <p>{`so for example, you can have a `}<inlineCode parentName=\"p\">{`draw`}</inlineCode>{` function that would go like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const draw = ({ctx, data, circle, params}) => {\n  const {height, width} = params;\n  ctx.clearReact(0, 0, width, height);\n  data.forEach(d => circle({x: d.x, y: d.y, 2}));\n  ctx.fill();\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport {\n  CanvasFrame,\n  TimeSeries,\n  Counter,\n  withFrame,\n} from 'react-sim';\nimport { Flex, Text } from 'rebass';\n\nimport Model from './framed-model';\n\nimport { initDice, updateDice, Die } from './dice';\n\nconst initDataCF = ({ height, width, balls, speed }) =>\n  Array(balls)\n    .fill(0)\n    .map(d => ({\n      x: Math.random() * width,\n      y: Math.random() * height,\n      c: `hsl(${Math.floor(Math.random() * 360)},85%,57%)`,\n\n      vx: (Math.random() - 0.5) * speed,\n      vy: (Math.random() - 0.5) * speed,\n    }));\n\nconst updateDataGF = ({ data, params }) =>\n  data.map(({ x, y, ...ball }) => ({\n    x: (x + ball.vx) % params.width,\n    y: (y + ball.vy) % params.height,\n    ...ball,\n  }));\n\nconst draw = ({ ctx, cachedData, data, circle, params, tick }) => {\n  const { height, width } = params;\n  ctx.clearRect(0, 0, width, height);\n\n  for (let i = Math.max(tick - 10, 0); i < tick; i++) {\n    const age = tick - i;\n    ctx.globalAlpha = 0.1 + (10 - age) * 0.05;\n    const r = 0.3 * (10 - age);\n    cachedData[i].forEach(d => {\n      ctx.fillStyle = d.c;\n      circle({ x: d.x, y: d.y, r });\n      ctx.fill();\n    });\n  }\n  ctx.globalAlpha = 1;\n  data.forEach(d => {\n    ctx.fillStyle = d.c;\n    circle({ x: d.x, y: d.y, r: 3 });\n    ctx.fill();\n  });\n};\n\nexport const CanvasFrameExample = props => (\n  <Model\n    initData={initDataCF}\n    updateData={updateDataGF}\n    maxTime={500}\n    initialParams={{\n      height: 200,\n      width: 332,\n      balls: 200,\n      speed: 3,\n    }}\n    {...props}\n  >\n    <CanvasFrame draw={draw} />\n  </Model>\n);\n\nconst DieFrame = ({ data }) => {\n  return (\n    <Flex flexDirection=\"row\" sx={{ height: '30px' }}>\n      {data.rolls.map((value, index) => (\n        <Die value={value} key={`k-${index}`} />\n      ))}\n    </Flex>\n  );\n};\n\nconst HOCDieFrame = withFrame(DieFrame);\n\nconst average = {\n  color: '#33e',\n  label: 'Average',\n  accessor: d => Number(d.average.toFixed(2)),\n};\n\nconst series = [\n  average,\n  {\n    color: '#e3e',\n    label: 'Last roll',\n    accessor: d => d.total,\n  },\n];\n\nconst stackedSeries = [...Array(13).keys()].slice(2).map(dots => ({\n  color: `hsl(${(360 * (1 + dots - 2)) / 11},85%,57%)`,\n  label: String(dots),\n  accessor: d => d.totals[dots] || 0,\n}));\n\nexport const TimeSeriesExample = props => (\n  <Model\n    initData={initDice}\n    updateData={updateDice}\n    initialParams={{ nbDice: 2 }}\n    {...props}\n  >\n    <Flex flexDirection=\"column\">\n      <Text sx={{ fontSize: 1, fontWeight: 'bold' }}>Roll:</Text>\n      <HOCDieFrame />\n      <Text sx={{ fontSize: 1, fontWeight: 'bold' }}>Average rolls:</Text>\n      <TimeSeries series={series} />\n      <Counter series={series} />\n      <Text sx={{ fontSize: 1, fontWeight: 'bold' }}>Roll distribution:</Text>\n      <TimeSeries series={stackedSeries} stacked />\n      <Counter series={stackedSeries.slice(0, 6)} />\n      <Counter series={stackedSeries.slice(6)} />\n    </Flex>\n  </Model>\n);\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p><inlineCode parentName=\"p\">{`roundRectangle`}</inlineCode>{` takes an object as argument with the following properties:`}</p>\n    <p>{`All the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/api/#canvasframe\"\n      }}>{`CanvasFrame`}</a>{` properties, plus:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`x`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`x coordinate of top-left corner of rectangle`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`y`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`y coordinate of top-left corner of rectangle`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`width`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Width of rectangle`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`height`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Height of rectangle`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`tl`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Radius of top-left corner`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`tr`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Radius of top-right corner`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`bl`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Radius of bottom-left corner`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`br`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Radius of botrom-right corner`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`r`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Radius of all unspecified corners`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`All the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/api/#canvasframe\"\n      }}>{`CanvasFrame`}</a>{` properties, plus:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`canvas`}</strong><br />{`DOM Node`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The actual canvas node`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`ctx`}</strong><br />{`Canvas rendering context`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the corresponding 2d context.`}<br />{`Exactly what you'd get if you typed`}<br />{` `}<inlineCode parentName=\"td\">{`const ctx = canvas.getContext('2d');`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`circle`}</strong><br />{`Helper function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`see `}<a parentName=\"td\" {...{\n              \"href\": \"/react-sim/api#circle\"\n            }}>{`circle API`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`roundRectangle`}</strong><br />{`Helper function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`see `}<a parentName=\"td\" {...{\n              \"href\": \"/react-sim/api#roundrectangle\"\n            }}>{`roundRectangle API`}</a></td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p><inlineCode parentName=\"p\">{`circle`}</inlineCode>{` takes an object as argument with the following properties:`}</p>\n    <p>{`All the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/api/#canvasframe\"\n      }}>{`CanvasFrame`}</a>{` properties, plus:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`x`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`x coordinate of circle center`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`y`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`y coordinate of circle center`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`r`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Radius of circle`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`All the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/api/#withframe\"\n      }}>{`connected Frame`}</a>{` context props, plus:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`draw`}</strong><br />{`function, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A function which will be called each time CanvasFrame is updated (ie at each animation cycle)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`height`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The height of the canvas. If ignored, CanvasFrame will used `}<inlineCode parentName=\"td\">{`params.height`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`width`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The width of the canvas. If ignored, CanvasFrame will used `}<inlineCode parentName=\"td\">{`params.width`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}