{"version":3,"sources":["webpack:///./src/pages/examples/fibonacci.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mQAMO,IAAMA,EAAe,CAC1B,MAAS,aAQLC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,MACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,kBACE,GAAM,sBADR,sBAGA,8FACA,sBACE,kBAAIC,WAAW,MAAf,IAAyB,4BAAzB,SACA,kBAAIA,WAAW,MAAf,IAAyB,4BAAzB,SACA,kBAAIA,WAAW,MAAf,IAAyB,4BAAzB,OAAiD,gCAAjD,OAA6E,gCAA7E,qBAEF,6DACA,YAAC,IAAD,CAAkBD,QAAQ,qBAC1B,0CAAyB,0BAAYC,WAAW,KAAvB,cAAzB,4BACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,gOAaL,yBAAQ,4BAAR,OAAgC,8BAAhC,qDACA,6HAEA,sBACE,kBAAIA,WAAW,MAAf,0BAA+C,4BAA/C,UACA,kBAAIA,WAAW,MAAf,0BAA+C,8BAA/C,uBACA,kBAAIA,WAAW,MAAf,0BAA+C,8BAA/C,kCACA,kBAAIA,WAAW,MAAf,0BAA+C,8BAA/C,uCACA,kBAAIA,WAAW,MAAf,qBAA0C,8BAA1C,uBAGF,+DAA8C,iBAAGA,WAAW,IACxD,KAAQ,+CADkC,iBAA9C,KAGA,8GACA,2PAEA,YAAC,IAAD,CAAWD,QAAQ,cACnB,8HACA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,gBADZ,uJAYTJ,EAAWK,gBAAiB","file":"component---src-pages-examples-fibonacci-mdx-5b80c4cb291d30a813cb.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { FibonacciNumbers, Fibonacci } from '../../components/examples/';\nexport const _frontmatter = {\n  \"Title\": \"Fibonacci\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"fibonacci-sequence\"\n    }}>{`Fibonacci sequence`}</h1>\n    <p>{`Both of these examples are inspired by the Fibonacci sequence, where:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`F`}<sub>{`0`}</sub>{` = 0,`}</li>\n      <li parentName=\"ul\">{`F`}<sub>{`1`}</sub>{` = 1,`}</li>\n      <li parentName=\"ul\">{`F`}<sub>{`n`}</sub>{` = F`}<sub>{`n - 1`}</sub>{` + F`}<sub>{`n - 2`}</sub>{` for each n > 2.`}</li>\n    </ul>\n    <p>{`0, 1, 1, 2, 3, 5, 8, 13, 21, 34, ...`}</p>\n    <FibonacciNumbers mdxType=\"FibonacciNumbers\" />\n    <p>{`The corresponding `}<inlineCode parentName=\"p\">{`udpateData`}</inlineCode>{` function is as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`function updateData({ data, tick }) {\n  if (tick === 0) {\n    return [0];\n  }\n  if (tick === 1) {\n    return [0, 1];\n  }\n  const lastNumber = data[tick - 1] + data[tick - 2];\n  return [...data, lastNumber];\n}\n`}</code></pre>\n    <p>{`F`}<sub>{`n`}</sub>{` / F`}<sub>{`n-1`}</sub>{` converges to φ, the golden ratio - (1 - √5) / 2.`}</p>\n    <p>{`Because of this convergence, the Fibonacci sequence is sometimes associated with spirals.\nWe could:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`draw a square of side F`}<sub>{`n`}</sub>{`, then`}</li>\n      <li parentName=\"ul\">{`draw a square of side F`}<sub>{`n+1`}</sub>{` to its right, then`}</li>\n      <li parentName=\"ul\">{`draw a square of side F`}<sub>{`n+2`}</sub>{` below these two squares, then`}</li>\n      <li parentName=\"ul\">{`draw a square of side F`}<sub>{`n+3`}</sub>{` to the left of these squares, then`}</li>\n      <li parentName=\"ul\">{`a square of side F`}<sub>{`n+4`}</sub>{` above,\netc, etc.`}</li>\n    </ul>\n    <p>{`and by linking their corners, obtain a `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Golden_spiral\"\n      }}>{`Golden spiral`}</a>{`.`}</p>\n    <p>{`But we can also draw a Golden Spiral without even needing to initiate or update data.`}</p>\n    <p>{`We can start from a rectangle φ `}{`*`}{` k by k rectangle, divide its longer side by φ, draw that square, and keep on dividing the remaining rectangle.\nWe'll have squares of same proportions and can also draw a similar spiral.`}</p>\n    <Fibonacci mdxType=\"Fibonacci\" />\n    <p>{`All we need is the number of steps we want to go (tick) and a Frame to render the squares and spiral.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const FibonacciSpiral = () => (\n  <Model initialParams={{ size: 500 }} delay={100} maxTime={20}>\n    <FibonacciSpiralFrame />\n  </Model>\n);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}