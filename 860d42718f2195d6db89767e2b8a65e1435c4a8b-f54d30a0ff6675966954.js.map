{"version":3,"sources":["webpack:///./src/pages/api/with-controls.mdx","webpack:///./src/pages/api/grid.mdx","webpack:///./src/pages/api/time-series.mdx","webpack:///./src/pages/api/round-rectangle.mdx","webpack:///./src/pages/api/draw.mdx","webpack:///./src/pages/api/common-controls-props.mdx","webpack:///./src/pages/api/indicator.mdx","webpack:///./src/pages/api/default-timer.mdx","webpack:///./src/pages/api/counter.mdx","webpack:///./src/pages/api/update-data.mdx","webpack:///./src/pages/api/model-state.mdx","webpack:///./src/pages/api/circle.mdx","webpack:///./src/components/api.js","webpack:///./src/pages/api/with-frame.mdx","webpack:///./src/pages/api/model-props.mdx","webpack:///./src/pages/api/series.mdx","webpack:///./src/pages/api/canvas-frame.mdx","webpack:///./src/pages/api/radio.mdx","webpack:///./src/pages/api/timer.mdx","webpack:///./src/pages/api/range.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0TAKO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,aAA8C,uBAFjD,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,4DAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,UAA2C,uBAF9C,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8CAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SAA0C,uBAF7C,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yBAE6B,kBAAIA,WAAW,MAAf,SAF7B,0DAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kEAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sHAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,cAA+C,uBAFlD,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oCAEwC,0BAAYA,WAAW,MAAvB,QAFxC,iCAUVJ,EAAWK,gBAAiB,G,0MClFrB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,SAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yDAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,2EAE+E,uBAF/E,mFAEyK,uBAAM,0BAAYA,WAAW,MAAvB,wCAEjL,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,+BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,2CAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,aAA8C,uBAFjD,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,uDAMN,oEAKJJ,EAAWK,gBAAiB,G,0MCnErB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,UAA2C,uBAF9C,0BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mBAEuB,+BAAGA,WAAW,MAAS,CAC1C,KAAQ,0BADW,UAFvB,+FAImH,0BAAYA,WAAW,MAAvB,cAJnH,qCAMF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,2BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mHAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,UAA2C,uBAF9C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yBAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,0BAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SAA0C,uBAF7C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,2BAUVJ,EAAWK,gBAAiB,G,0MC5ErB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,qBAAG,0BAAYC,WAAW,KAAvB,kBAAH,+DACA,gCAAe,+BAAGA,WAAW,KAAQ,CACjC,KAAQ,gCADG,eAAf,sBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,KAAsC,uBAFzC,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iDAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,KAAsC,uBAFzC,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iDAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SAA0C,uBAF7C,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,uBAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,UAA2C,uBAF9C,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,wBAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,MAAuC,uBAF1C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8BAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,MAAuC,uBAF1C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,+BAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,MAAuC,uBAF1C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,MAAuC,uBAF1C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,KAAsC,uBAFzC,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yCAUVJ,EAAWK,gBAAiB,G,0MC9GrB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,gCAAe,+BAAGC,WAAW,KAAQ,CACjC,KAAQ,gCADG,eAAf,sBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,UAA2C,uBAF9C,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,2BAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,OAAwC,uBAF3C,4BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gCAEoC,uBAFpC,sCAEiF,uBAFjF,IAE4F,0BAAYA,WAAW,MAAvB,0CAE9F,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,UAA2C,uBAF9C,mBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,OAEW,+BAAGA,WAAW,MAAS,CAC9B,KAAQ,0BADD,gBAIb,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,kBAAmD,uBAFtD,mBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,OAEW,+BAAGA,WAAW,MAAS,CAC9B,KAAQ,kCADD,2BAUrBJ,EAAWK,gBAAiB,G,0MCzErB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,wCAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,wDAE4D,0BAAYA,WAAW,MAAvB,YAF5D,KAEuH,0BAAYA,WAAW,MAAvB,SAFvH,KAE+K,0BAAYA,WAAW,MAAvB,SAF/K,KAEuO,0BAAYA,WAAW,MAAvB,SAFvO,KAE+R,0BAAYA,WAAW,MAAvB,UAF/R,KAEwV,0BAAYA,WAAW,MAAvB,SAFxV,OAEkZ,0BAAYA,WAAW,MAAvB,UAFlZ,MAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SAA0C,uBAF7C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,+CAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8CAEkD,0BAAYA,WAAW,MAAvB,SAFlD,mBAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,iBAAkD,uBAFrD,uCAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,4DAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mFAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SAA0C,uBAF7C,OAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yCAUVJ,EAAWK,gBAAiB,G,0MClFrB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,UAA2C,uBAF9C,0BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAEgB,+BAAGA,WAAW,MAAS,CACnC,KAAQ,0BADI,UAFhB,yEAI6F,0BAAYA,WAAW,MAAvB,QAJ7F,mDAMF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,UAA2C,uBAF9C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SAA0C,uBAF7C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oCAUVJ,EAAWK,gBAAiB,G,0MCpErB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,yBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yDAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,2BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,4BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8EAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,kBAAmD,uBAFtD,4BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kDAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,aAA8C,uBAFjD,4BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gMAUVJ,EAAWK,gBAAiB,G,0MC1ErB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,UAA2C,uBAF9C,0BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mBAEuB,+BAAGA,WAAW,MAAS,CAC1C,KAAQ,2BADW,UAFvB,+FAImH,0BAAYA,WAAW,MAAvB,QAJnH,mDAMF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,UAA2C,uBAF9C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SAA0C,uBAF7C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kCAUVJ,EAAWK,gBAAiB,G,0MCpErB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wDACF,0BAAYC,WAAW,KAAvB,uDADE,6BAC2H,0BAAYA,WAAW,KAAvB,QAD3H,kBAEA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,OAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,0CAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,6BAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,UAA2C,uBAF9C,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,uCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,cAA+C,uBAFlD,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,4CAEgD,0BAAYA,WAAW,MAAvB,QAFhD,KAEuG,0BAAYA,WAAW,MAAvB,oBAFvG,4BAEiM,0BAAYA,WAAW,MAAvB,QAFjM,uCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,4EAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SAA0C,uBAF7C,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,wFAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8GAUVJ,EAAWK,gBAAiB,G,4MC5FrB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,OAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oDAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mGAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,UAA2C,uBAF9C,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,aAA8C,uBAFjD,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8CAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,OAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,+FAMN,+CAA8B,0BAAYA,WAAW,KAAvB,QAA9B,QAAuF,0BAAYA,WAAW,KAAvB,UAAvF,YAAsJ,0BAAYA,WAAW,KAAvB,QAAtJ,qFAA4R,0BAAYA,WAAW,KAAvB,cAA5R,sBAAyW,0BAAYA,WAAW,KAAvB,UAAzW,sDAAkd,+BAAGA,WAAW,KAAQ,CACpe,KAAQ,wBADsc,YAAld,KAGA,qDACA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SAA0C,uBAF7C,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sDAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gBAEoB,0BAAYA,WAAW,MAAvB,QAFpB,mCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gBAEoB,0BAAYA,WAAW,MAAvB,QAFpB,gCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,qBAAsD,uBAFzD,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oJAUVJ,EAAWK,gBAAiB,G,0MC5HrB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,qBAAG,0BAAYC,WAAW,KAAvB,UAAH,+DACA,gCAAe,+BAAGA,WAAW,KAAQ,CACjC,KAAQ,gCADG,eAAf,sBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,KAAsC,uBAFzC,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,KAAsC,uBAFzC,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,KAAsC,uBAFzC,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,wBAUVJ,EAAWK,gBAAiB,G,kCCnE5B,ykC,0MCKO,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,wCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,WAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,UAA2C,uBAF9C,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8CAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,cAA+C,uBAFlD,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sBAE0B,0BAAYA,WAAW,MAAvB,SAF1B,uBAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,SAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,wDAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,4HAUVJ,EAAWK,gBAAiB,G,sNCzFrB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,eAAgD,uBAFnD,+BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yBAE6B,0BAAYA,WAAW,MAAvB,QAF7B,MAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,gBAAiD,uBAFpD,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,6BAEiC,0BAAYA,WAAW,MAAvB,UAFjC,0EAE+J,0BAAYA,WAAW,MAAvB,UAF/J,qBAMN,wFAAuE,0BAAYA,WAAW,KAAvB,iBAAvE,SACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,4BAIL,2BACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,+CAIL,qBAAG,0BAAYA,WAAW,KAAvB,iBAAH,+GACA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SAA0C,uBAF7C,+BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mIAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,gCAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gBAEoB,0BAAYA,WAAW,MAAvB,QAFpB,+BAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,kCAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gBAEoB,0BAAYA,WAAW,MAAvB,QAFpB,kCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,qBAAsD,uBAFzD,gCAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iJAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,aAA8C,uBAFjD,0BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sIAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,0BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,2EAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,0BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kJAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,4BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,2DAE+D,0BAAYA,WAAW,MAAvB,UAF/D,mCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,cAA+C,uBAFlD,oCAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yDAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,aAA8C,uBAFjD,mCAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,2DAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,mCAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,qIAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,mBAAoD,uBAFvD,mCAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gGAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,sBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,qCAEyC,0BAAYA,WAAW,MAAvB,QAFzC,0DAEqJ,uBAFrJ,YAEwK,0BAAYA,WAAW,MAAvB,UAFxK,qDAEiR,0BAAYA,WAAW,MAAvB,QAFjR,mCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,cAA+C,uBAFlD,sBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,6BAEiC,0BAAYA,WAAW,MAAvB,QAFjC,sCAMN,YAAC,UAAD,CAAYD,QAAQ,gBAKxBH,EAAWK,gBAAiB,G,0MC9LrB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,qBAAG,0BAAYC,WAAW,KAAvB,UAAH,wCACA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SAA0C,uBAF7C,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,0BAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SAA0C,uBAF7C,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yBAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,+EAUVJ,EAAWK,gBAAiB,G,0MC3DrB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,gCAAe,+BAAGC,WAAW,KAAQ,CACjC,KAAQ,8BADG,mBAAf,yBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,sBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kGAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,UAA2C,uBAF9C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,+DAEmE,0BAAYA,WAAW,MAAvB,iBAFnE,MAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SAA0C,uBAF7C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8DAEkE,0BAAYA,WAAW,MAAvB,gBAFlE,SAUVJ,EAAWK,gBAAiB,G,0MC7DrB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,4BAAW,+BAAGC,WAAW,KAAQ,CAC7B,KAAQ,yCADD,yBAAX,sBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iEAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,uCAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iEAUVJ,EAAWK,gBAAiB,G,0MCrDrB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,4BAAW,+BAAGC,WAAW,KAAQ,CAC7B,KAAQ,iCADD,iBAAX,sBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,2BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sCAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WAA4C,uBAF/C,yBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yDAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SAA0C,uBAF7C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,+CAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8DAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,sBAAuD,uBAF1D,yBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,2CAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,yBAA0D,uBAF7D,yBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,6EAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,yBAA0D,uBAF7D,yBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,4EAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,sBAAuD,uBAF1D,yBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,6DAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,4BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8EAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,kBAAmD,uBAFtD,4BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kDAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,UAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kDAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,cAA+C,uBAFlD,YAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,+DAMN,uEAAsD,kBAAIA,WAAW,KAAf,OAAtD,WAAiG,0BAAYA,WAAW,KAAvB,SAAjG,SAA4J,0BAAYA,WAAW,KAAvB,YAA5J,gBAKJJ,EAAWK,gBAAiB,G,0MCtIrB,IAAMP,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,4BAAW,+BAAGC,WAAW,KAAQ,CAC7B,KAAQ,wCADD,wBAAX,sBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,iCAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,qDAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,+BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,2DAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,oBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8DAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,sBAAuD,uBAF1D,yBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,2CAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,yBAA0D,uBAF7D,yBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,6EAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,yBAA0D,uBAF7D,yBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,4EAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,sBAAuD,uBAF1D,yBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,6DAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,uBAAwD,uBAF3D,yBAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oHAIF,kBAAIA,WAAW,SACb,gCAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,+BAGA,gCAAIA,WAAW,MAAS,CACtB,MAAS,OADX,uGAUVJ,EAAWK,gBAAiB","file":"860d42718f2195d6db89767e2b8a65e1435c4a8b-f54d30a0ff6675966954.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`isPlaying`}</strong><br />{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tells your custom control if the simulation is playing.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`params`}</strong><br />{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`any and all of the simulation parameters.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`pause`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`call this function to `}<em parentName=\"td\">{`pause`}</em>{` the simulation (it stops playing, but is not reset.)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`play`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`call this function to start or resume playing the simulation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`stop`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`call this function to stop the simulation (stops playing, time is reset to default, data of simulation is reset.)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`updateTime`}</strong><br />{`fuction`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`call with a number to update the `}<inlineCode parentName=\"td\">{`tick`}</inlineCode>{` value in the simulation.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`data`}</strong><br />{`Array`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`It expects data to be a 2-dimensional array of data.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`accessor`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`How to determine how to color each cell. The inputs of the function are:`}<br />{`cell (content of the cell), x , y. The output is: a color. The default value is:`}<br /><inlineCode parentName=\"td\">{`cell => cell ? 0 : 'none' : '#000'`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`size`}</strong><br />{`string/integer, default: 12`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`How big the squares will be in pixels.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`cellProps`}</strong><br />{`anything`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Any extra prop to pass to each individual square`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Any other prop will be passed to the Grid.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`series`}</strong><br />{`series object or array`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Either a single `}<a parentName=\"td\" {...{\n              \"href\": \"/react-sim/api#series\"\n            }}>{`series`}</a>{` object or an array of series. the accessor function is going to be called on every item in `}<inlineCode parentName=\"td\">{`cachedData`}</inlineCode>{` and the result will be plotted.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`stacked`}</strong><br />{`boolean, default: false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If true, represents the time series as full-height, stacked area charts. If false, the series are line charts.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`height`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Height of the chart.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`padding`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Padding of the chart.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`width`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Width of the chart.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p><inlineCode parentName=\"p\">{`roundRectangle`}</inlineCode>{` takes an object as argument with the following properties:`}</p>\n    <p>{`All the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/api/#canvasframe\"\n      }}>{`CanvasFrame`}</a>{` properties, plus:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`x`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`x coordinate of top-left corner of rectangle`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`y`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`y coordinate of top-left corner of rectangle`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`width`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Width of rectangle`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`height`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Height of rectangle`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`tl`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Radius of top-left corner`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`tr`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Radius of top-right corner`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`bl`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Radius of bottom-left corner`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`br`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Radius of botrom-right corner`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`r`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Radius of all unspecified corners`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`All the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/api/#canvasframe\"\n      }}>{`CanvasFrame`}</a>{` properties, plus:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`canvas`}</strong><br />{`DOM Node`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The actual canvas node`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`ctx`}</strong><br />{`Canvas rendering context`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the corresponding 2d context.`}<br />{`Exactly what you'd get if you typed`}<br />{` `}<inlineCode parentName=\"td\">{`const ctx = canvas.getContext('2d');`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`circle`}</strong><br />{`Helper function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`see `}<a parentName=\"td\" {...{\n              \"href\": \"/react-sim/api#circle\"\n            }}>{`circle API`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`roundRectangle`}</strong><br />{`Helper function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`see `}<a parentName=\"td\" {...{\n              \"href\": \"/react-sim/api#roundrectangle\"\n            }}>{`roundRectangle API`}</a></td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`type`}</strong><br />{`string, optional, 'range' by default`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The kind of control we're describing. Can be one of: `}<inlineCode parentName=\"td\">{`checkbox`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`input`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`radio`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`range`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`select`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`timer`}</inlineCode>{` or `}<inlineCode parentName=\"td\">{`toggle`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`label`}</strong><br />{`string, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The label which will describe the control.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`name`}</strong><br />{`string, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The name of the control. If not specified, `}<inlineCode parentName=\"td\">{`label`}</inlineCode>{` will be used.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`resetOnChange`}</strong><br />{`boolean, optional, false by default`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the model will be reset if the control changes.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`setValue`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This function will be called whenever the control changes to update its value.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`value`}</strong><br />{`any`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The current value of the control.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`series`}</strong><br />{`series object or array`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A single `}<a parentName=\"td\" {...{\n              \"href\": \"/react-sim/api#series\"\n            }}>{`series`}</a>{` object. The accessor function is going to be called on every item in `}<inlineCode parentName=\"td\">{`data`}</inlineCode>{` and a single number will be shown per series.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`height`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Height of the indicator card.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`padding`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Padding of the indicator card.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`width`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Width of the indicator card.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`minTime`}</strong><br />{`integer, 0 by default`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`at which position the timer starts. Can be negative.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`maxTime`}</strong><br />{`integer, 100 by default`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`at which position the timer ends.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`showTime`}</strong><br />{`boolean, true by default`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the time block (i.e. slider and time value) is going to be shown.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`showTimeSlider`}</strong><br />{`boolean, true by default`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the time slider is going to be shown.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`showTimer`}</strong><br />{`boolean, true by default`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the Timer is shown at all. If the Timer is not shown, you will have to provide another way to start the simulation (or effectively force the user to stay on the initial state).`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`series`}</strong><br />{`series object or array`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Either a single `}<a parentName=\"td\" {...{\n              \"href\": \"/react-sim/api/#series\"\n            }}>{`series`}</a>{` object or an array of series. the accessor function is going to be called on every item in `}<inlineCode parentName=\"td\">{`data`}</inlineCode>{` and a single number will be shown per series.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`height`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Height of the counter card.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`padding`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Padding of the counter card.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`width`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Width of the counter card.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Its arguments are of the form:\n`}<inlineCode parentName=\"p\">{`({cachedData, complete, data, params, pause, stop})`}</inlineCode>{`. Its output will replace `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` in the state.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`data`}</strong><br />{`any`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Represents the current value of data.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`tick`}</strong><br />{`integer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Represents the new tick.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`params`}</strong><br />{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Represents the current parameters.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`cachedData`}</strong><br />{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An object so that for each past value of `}<inlineCode parentName=\"td\">{`tick`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`cachedData[tick]`}</inlineCode>{` represents the value of `}<inlineCode parentName=\"td\">{`data`}</inlineCode>{` at that moment of the simulation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`complete`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A function that signals the simulation is complete (it will also stop).`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`pause`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A function that will stop the simulation from automatically updating and animating.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`stop`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A function that will stop the simulation from automatically updating and animating, and will reset it.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`data`}</strong><br />{`any`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Represents the current state of the simulation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`tick`}</strong><br />{`integer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A measure of time in the simulation. Each time the simulation updates, ticks increases by one.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`params`}</strong><br />{`Object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The parameters of the simulation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`isPlaying`}</strong><br />{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the simulation is running or not.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`results`}</strong><br />{`any`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is updated each time the simulation finishes, and contains information on the past runs.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`The difference between `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`params`}</inlineCode>{` is that `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` is being updated at each simulation tick, without user intervention, through the `}<inlineCode parentName=\"p\">{`updateData`}</inlineCode>{` function, whereas `}<inlineCode parentName=\"p\">{`params`}</inlineCode>{` is only modified when the user interacts with the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/controls\"\n      }}>{`controls`}</a>{`.`}</p>\n    <p>{`The built-in parameters are:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`delay`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`delay between animation refreshes in miliseconds.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`maxTime`}</strong><br />{`integer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the value of `}<inlineCode parentName=\"td\">{`tick`}</inlineCode>{` at which the animation stops.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`minTime`}</strong><br />{`integer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the value of `}<inlineCode parentName=\"td\">{`tick`}</inlineCode>{` when the animation starts.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`ticksPerAnimation`}</strong><br />{`integer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the number of simulation ticks per animation refresh. If more than one, the simulation will update several times before it's rendered again.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p><inlineCode parentName=\"p\">{`circle`}</inlineCode>{` takes an object as argument with the following properties:`}</p>\n    <p>{`All the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/api/#canvasframe\"\n      }}>{`CanvasFrame`}</a>{` properties, plus:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`x`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`x coordinate of circle center`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`y`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`y coordinate of circle center`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`r`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Radius of circle`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export { default as CanvasFrameAPI } from '../pages/api/canvas-frame.mdx';\nexport { default as CircleAPI } from '../pages/api/circle.mdx';\nexport { default as CommonControlsPropsAPI } from '../pages/api/common-controls-props.mdx';\nexport { default as CounterAPI } from '../pages/api/counter.mdx';\nexport { default as DefaultTimerAPI } from '../pages/api/default-timer.mdx';\nexport { default as DrawAPI } from '../pages/api/draw.mdx';\nexport { default as GridAPI } from '../pages/api/grid.mdx';\nexport { default as IndicatorAPI } from '../pages/api/indicator.mdx';\nexport { default as ModelPropsAPI } from '../pages/api/model-props.mdx';\nexport { default as ModelStateAPI } from '../pages/api/model-state.mdx';\nexport { default as RadioAPI } from '../pages/api/radio.mdx';\nexport { default as RangeAPI } from '../pages/api/range.mdx';\nexport { default as RoundRectangleAPI } from '../pages/api/round-rectangle.mdx';\nexport { default as SelectAPI } from '../pages/api/radio.mdx';\nexport { default as SeriesAPI } from '../pages/api/series.mdx';\nexport { default as TimerAPI } from '../pages/api/timer.mdx';\nexport { default as TimeSeriesAPI } from '../pages/api/time-series.mdx';\nexport { default as UpdateDataAPI } from '../pages/api/update-data.mdx';\nexport { default as WithControlsAPI } from '../pages/api/with-controls.mdx';\nexport { default as WithFrameAPI } from '../pages/api/with-frame.mdx';\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`data`}</strong><br />{`anything`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the current state of the simulation`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`tick`}</strong><br />{`integer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the progress in the simulation`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`params`}</strong><br />{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`all the parameters set by the user/author`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`cachedData`}</strong><br />{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`data from previous `}<inlineCode parentName=\"td\">{`ticks`}</inlineCode>{` of the simulation`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`results`}</strong><br />{`array`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`data from previous completed runs of the simulation`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`initData`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the Frame can reinitialize data`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`setData`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the Frame can change the data (so for instance the Frame can be used to let the user enter an initial state of data)`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport UpdateData from './update-data.mdx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`initialTick`}</strong><br />{`number, optional, default 0`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The initial value for `}<inlineCode parentName=\"td\">{`tick`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`initalParams`}</strong><br />{`object, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The initial value for the `}<inlineCode parentName=\"td\">{`params`}</inlineCode>{` of the simulation. When the simulation starts, it is used to populate `}<inlineCode parentName=\"td\">{`params`}</inlineCode>{` in the state.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`The following properties can be used as is, or be passed inside `}<inlineCode parentName=\"p\">{`initialParams`}</inlineCode>{`,i.e.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Model delay={100} />\n`}</code></pre>\n    <p>{`or`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Model initialParams={{ delay: 100 }} />\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`initialParams`}</inlineCode>{` takes precedence if both are used. They provide an initial value for the corresponding parts of the state.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`delay`}</strong><br />{`number, optional, default 0`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The delay between each animation refresh. If not specified, animations happen as fast as possible (up to 60 times per second).`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`minTime`}</strong><br />{`integer, optional, default 0`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The value of `}<inlineCode parentName=\"td\">{`tick`}</inlineCode>{` when the animation starts`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`maxTime`}</strong><br />{`integer, optional, default 100`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The value of `}<inlineCode parentName=\"td\">{`tick`}</inlineCode>{` at which the animation stops`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`ticksPerAnimation`}</strong><br />{`integer, optional, default 1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The number of simulation ticks per animation refresh. If more than one, the simulation will update several times before it's rendered again.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`isPlaying`}</strong><br />{`boolean, default false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the simulation plays automatically or not. If this is updated by external components, the simulation will stop or resume.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`loop`}</strong><br />{`boolean, default false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to true, the simulation restarts whenever it's stopped playing.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`nocache`}</strong><br />{`boolean, default false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to true, the simulation won't cache its data. If data is cached, then the user can go back in time without having to recalculate data.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`controls`}</strong><br />{`control object, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Describes the UI of the simulation. Controls is how the `}<inlineCode parentName=\"td\">{`params`}</inlineCode>{` in the state can be modified.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`noControls`}</strong><br />{`boolean, optional, default false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to true, the default controls won't be shown.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`showTimer`}</strong><br />{`boolean, optional, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to false, the default timer won't be displayed.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`showTime`}</strong><br />{`boolean, optional, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to false, only the play, stop and step-in button will be displayed, the slider and the indication of time won't be shown.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`showTimerSlider`}</strong><br />{`boolean, optional, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to false, the timer slider won't be displayed, though the indication of time may be.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`initData`}</strong><br />{`function, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The function that initializes the `}<inlineCode parentName=\"td\">{`data`}</inlineCode>{` of the model, when it first starts or when it's reset.`}<br />{`It takes `}<inlineCode parentName=\"td\">{`params`}</inlineCode>{` (in the state) as input, and outputs a value for `}<inlineCode parentName=\"td\">{`data`}</inlineCode>{` (which it puts in the state).`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`updateData`}</strong><br />{`function, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This function updates the `}<inlineCode parentName=\"td\">{`data`}</inlineCode>{` at each tick of the simualtion`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <UpdateData mdxType=\"UpdateData\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p><inlineCode parentName=\"p\">{`series`}</inlineCode>{` is an object with three properties:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`label`}</strong><br />{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Describes the series,`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`color`}</strong><br />{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Color of the series,`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`accessor`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Function that turns a data object into the value that you want to plot.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`All the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/api/#withframe\"\n      }}>{`connected Frame`}</a>{` context props, plus:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`draw`}</strong><br />{`function, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A function which will be called each time CanvasFrame is updated (ie at each animation cycle)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`height`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The height of the canvas. If ignored, CanvasFrame will used `}<inlineCode parentName=\"td\">{`params.height`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`width`}</strong><br />{`number, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The width of the canvas. If ignored, CanvasFrame will used `}<inlineCode parentName=\"td\">{`params.width`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/api#common-controls-props\"\n      }}>{`Common controls props`}</a>{` properties, plus:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`options`}</strong><br />{`Array of strings`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The various items that can be selected through this control.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`vertical`}</strong><br />{`boolean, optional, false by default`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the options are shown horizontally or vertically.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/api#default-timer\"\n      }}>{`Default timer`}</a>{` properties, plus:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`maxTime`}</strong><br />{`integer, 100 by default`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`At which position the timer ends.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`minTime`}</strong><br />{`integer, 0 by default`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`At which position the timer starts. Can be negative.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`label`}</strong><br />{`string, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The label which will describe the control.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`name`}</strong><br />{`string, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The name of the control. If not specified, label is used.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`shouldDisplayLabel`}</strong><br />{`boolean, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the label should be displayed.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`shouldDisplayMaxValue`}</strong><br />{`boolean, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the maximum value should be displayed to the right of the range.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`shouldDisplayMinValue`}</strong><br />{`boolean, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the minimum value should be displayed to the left of the range.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`shouldDisplayValue`}</strong><br />{`boolean, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the value should be displayed next to the label.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`showTime`}</strong><br />{`boolean, true by default`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the time block (i.e. slider and time value) is going to be shown.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`showTimeSlider`}</strong><br />{`boolean, true by default`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the time slider is going to be shown.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`time`}</strong><br />{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The current value of time shown on this Timer`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`updateTime`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The function that will update this Timer's time when the`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Unlike the other built-in controls, Timer does `}<em parentName=\"p\">{`not`}</em>{` take a `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` or a `}<inlineCode parentName=\"p\">{`setValue`}</inlineCode>{` parameter.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`All `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/api#common-control-props\"\n      }}>{`Common control props`}</a>{` properties, plus:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`maxValue`}</strong><br />{`number, optional, default 100`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The value corresponding to the end of the range.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`minValue`}</strong><br />{`number, optional, default 0`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The value corresponding to the beginning of the range.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`name`}</strong><br />{`string, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The name of the control. If not specified, label is used.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`shouldDisplayLabel`}</strong><br />{`boolean, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the label should be displayed.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`shouldDisplayMaxValue`}</strong><br />{`boolean, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the maximum value should be displayed to the right of the range.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`shouldDisplayMinValue`}</strong><br />{`boolean, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the minimum value should be displayed to the left of the range.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`shouldDisplayValue`}</strong><br />{`boolean, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the value should be displayed next to the label.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`shouldDisplaySlider`}</strong><br />{`boolean, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the slider should be displayed. If the slider is not displayed, the min and max values are also hidden.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`step`}</strong><br />{`number, optional, default 1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The amount by which the value will be incremeneted or decremented when moving the range cursor.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}