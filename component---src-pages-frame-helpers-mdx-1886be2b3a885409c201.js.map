{"version":3,"sources":["webpack:///./src/pages/frame-helpers.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oQAKO,IAAMA,EAAe,CAC1B,MAAS,iBAQLC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,sLAEA,gDAA+B,+BAAGC,WAAW,KAAQ,CACjD,KAAQ,0CADmB,qBAA/B,QAEuC,+BAAGA,WAAW,KAAQ,CACzD,KAAQ,wBAD2B,YAFvC,KAKA,+CACA,sBACE,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,kCADQ,QAApB,KAGA,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,0CADQ,gBAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,yCADQ,eAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,yCADQ,YAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,yCADQ,eAItB,8EAA6D,0BAAYA,WAAW,KAAvB,aAA7D,KACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,qFAIL,uLACA,sBACE,kBAAIA,WAAW,MAAf,eACA,kBAAIA,WAAW,MAAf,SACA,kBAAIA,WAAW,MAAf,aACA,kBAAIA,WAAW,MAAf,WACA,kBAAIA,WAAW,MAAf,YACA,kBAAIA,WAAW,MAAf,SACA,kBAAIA,WAAW,MAAf,YAEF,yKACyB,0BAAYA,WAAW,KAAvB,UADzB,KAEA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,oJAcTJ,EAAWK,gBAAiB","file":"component---src-pages-frame-helpers-mdx-1886be2b3a885409c201.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"Title\": \"Frame Helpers\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Frame helpers are building blocks to help you create frames quicker.\nYou 100% can build Frames without them but they make certain patterns in Frames easier.`}</p>\n    <p>{`They are similar to the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/controls/pre-defined-types\"\n      }}>{`pre-defined types`}</a>{` for `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/controls\"\n      }}>{`controls`}</a>{`.`}</p>\n    <p>{`The Frame Helpers are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-sim/frame-helpers/grid\"\n        }}>{`Grid`}</a>{`,`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-sim/frame-helpers/canvas-frame\"\n        }}>{`CanvasFrame`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-sim/frame-helpers/time-series\"\n        }}>{`TimeSeries`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-sim/frame-helpers/time-series\"\n        }}>{`Counter`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-sim/frame-helpers/time-series\"\n        }}>{`Indicator`}</a></li>\n    </ul>\n    <p>{`To use a Frame Helper in your project, import it from `}<inlineCode parentName=\"p\">{`react-sim`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Grid, CanvasFrame, TimeSeries, Counter, Indicator } from 'react-sim';\n`}</code></pre>\n    <p>{`Frame helpers are already connected with the Model, so if you use a Frame helper anywhere within a Model, it will receive the following props from that Model:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`cachedData,`}</li>\n      <li parentName=\"ul\">{`data,`}</li>\n      <li parentName=\"ul\">{`initData,`}</li>\n      <li parentName=\"ul\">{`params,`}</li>\n      <li parentName=\"ul\">{`results,`}</li>\n      <li parentName=\"ul\">{`tick,`}</li>\n      <li parentName=\"ul\">{`setData`}</li>\n    </ul>\n    <p>{`It's also possible to get the corresponding component, i.e. without these props automatically provided by the Model.\nJust add Component to your `}<inlineCode parentName=\"p\">{`import`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {\n  GridComponent,\n  CanvasFrameComponent,\n  TimeSeriesComponent,\n  CounterComponent,\n  IndicatorComponent,\n} from 'react-sim';\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}