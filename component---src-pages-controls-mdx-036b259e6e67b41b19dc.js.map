{"version":3,"sources":["webpack:///./src/pages/controls.mdx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-html.js"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","name","parentName","isMDXComponent","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length"],"mappings":"gRAMO,IAAMA,EAAe,CAC1B,MAAS,YAQLC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,YADR,YAGA,iFACA,YAAC,IAAD,CAAOC,KAAK,gBAAgBD,QAAQ,UACpC,2EACA,sBACE,kBAAIE,WAAW,MAAf,+CAAoE,0BAAYA,WAAW,MAAvB,aAApE,iHACA,kBAAIA,WAAW,MAAf,6GAAkI,0BAAYA,WAAW,MAAvB,gBAAlI,0FAEF,qBAAG,sBAAQA,WAAW,KAAnB,SAAH,sBAAmE,0BAAYA,WAAW,KAAvB,SAAnE,qBAA0I,+BAAGA,WAAW,KAAQ,CAC5J,KAAQ,sCAD8H,iBAA1I,2HAOJL,EAAWM,gBAAiB,G,uBC1C5B,IAAIC,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAO,KAEPC,EAAa,SAAUC,EAAQC,EAAKC,EAAWC,GACjD,IAAIC,EAAIC,OAAOR,EAAQG,IACnBM,EAAK,IAAML,EAEf,MADkB,KAAdC,IAAkBI,GAAM,IAAMJ,EAAY,KAAOG,OAAOF,GAAOI,QAAQT,EAAM,UAAY,KACtFQ,EAAK,IAAMF,EAAI,KAAOH,EAAM,KAErCO,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAKZ,GACfJ,EAAQA,EAAQkB,EAAIlB,EAAQmB,EAAIlB,GAAM,WACpC,IAAImB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKE,MAAM,KAAKC,OAAS,KAC7D,SAAUN","file":"component---src-pages-controls-mdx-036b259e6e67b41b19dc.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Image from '../components/image';\nexport const _frontmatter = {\n  \"Title\": \"Controls\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"controls\"\n    }}>{`Controls`}</h1>\n    <p>{`Controls is how a user can interact with the simulation:`}</p>\n    <Image name=\"modelControls\" mdxType=\"Image\" />\n    <p>{`React-Sim provides 2 ways to build that interface.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A \"fast\" one, by passing certain props to a `}<inlineCode parentName=\"li\">{`<Model />`}</inlineCode>{` component. You have access to building blocks to create a controls UI, styled sensibly, with minimal effort.`}</li>\n      <li parentName=\"ul\">{`a \"custom\" one, using a wrapper. You bring in the component you want, styled the way you want, wrap it in `}<inlineCode parentName=\"li\">{`withControls`}</inlineCode>{` and it will have the methods and information needed to interact with the simulation.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`TL;DR`}</strong>{`: by default, your `}<inlineCode parentName=\"p\">{`Model`}</inlineCode>{` will come with a `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/controls/default-timer\"\n      }}>{`default timer`}</a>{` control that lets user start, stop, reset and go step by step in a simulation. That default timer stops at 100 ticks.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}