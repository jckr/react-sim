{"version":3,"sources":["webpack:///./src/pages/api/update-data.mdx","webpack:///./src/pages/api/style.mdx","webpack:///./src/pages/api/model-props.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-api-model-props-mdx-e718b675ebe1ec623dc2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Its arguments are of the form:\n`}<inlineCode parentName=\"p\">{`({cachedData, complete, data, params, pause, stop})`}</inlineCode>{`. Its output will replace `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` in the state.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`data`}</strong><br />{`any`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Represents the current value of data.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`tick`}</strong><br />{`integer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Represents the new tick.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`params`}</strong><br />{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Represents the current parameters.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`cachedData`}</strong><br />{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An object so that for each past value of `}<inlineCode parentName=\"td\">{`tick`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`cachedData[tick]`}</inlineCode>{` represents the value of `}<inlineCode parentName=\"td\">{`data`}</inlineCode>{` at that moment of the simulation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`complete`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A function that signals the simulation is complete (it will also stop).`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`pause`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A function that will stop the simulation from automatically updating and animating.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`stop`}</strong><br />{`function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A function that will stop the simulation from automatically updating and animating, and will reset it.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3 {...{\n      \"id\": \"style\"\n    }}>{`Style`}</h3>\n    <p><inlineCode parentName=\"p\">{`Model`}</inlineCode>{` uses the `}<a parentName=\"p\" {...{\n        \"href\": \"https://rebassjs.org/\"\n      }}>{`rebass`}</a>{` component system.\nRebass is part of a larger ecosystem that includes `}<a parentName=\"p\" {...{\n        \"href\": \"https://theme-ui.com/\"\n      }}>{`theme-ui`}</a>{` and the `}<a parentName=\"p\" {...{\n        \"href\": \"https://styled-system.com/\"\n      }}>{`styled system`}</a>{`.`}</p>\n    <p>{`As such, `}<inlineCode parentName=\"p\">{`Model`}</inlineCode>{` can take a theme-ui `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` and styled system `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` props.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`theme`}</strong><br />{`object, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A `}<a parentName=\"td\" {...{\n              \"href\": \"https://theme-ui.com/\"\n            }}>{`theme-ui`}</a>{` theme.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`sx`}</strong><br />{`object, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A `}<a parentName=\"td\" {...{\n              \"href\": \"https://styled-system.com/\"\n            }}>{`styled system`}</a>{` style prop.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport UpdateData from './update-data.mdx';\nimport Style from './style.mdx';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`initialTick`}</strong><br />{`number, optional, default 0`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The initial value for `}<inlineCode parentName=\"td\">{`tick`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`initalParams`}</strong><br />{`object, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The initial value for the `}<inlineCode parentName=\"td\">{`params`}</inlineCode>{` of the simulation. When the simulation starts, it is used to populate `}<inlineCode parentName=\"td\">{`params`}</inlineCode>{` in the state.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`The following properties can be used as is, or be passed inside `}<inlineCode parentName=\"p\">{`initialParams`}</inlineCode>{`,i.e.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Model delay={100} />\n`}</code></pre>\n    <p>{`or`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Model initialParams={{ delay: 100 }} />\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`initialParams`}</inlineCode>{` takes precedence if both are used. They provide an initial value for the corresponding parts of the state.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`delay`}</strong><br />{`number, optional, default 0`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The delay between each animation refresh. If not specified, animations happen as fast as possible (up to 60 times per second).`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`minTime`}</strong><br />{`integer, optional, default 0`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The value of `}<inlineCode parentName=\"td\">{`tick`}</inlineCode>{` when the animation starts`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`maxTime`}</strong><br />{`integer, optional, default 100`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The value of `}<inlineCode parentName=\"td\">{`tick`}</inlineCode>{` at which the animation stops`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`ticksPerAnimation`}</strong><br />{`integer, optional, default 1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The number of simulation ticks per animation refresh. If more than one, the simulation will update several times before it's rendered again.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`isPlaying`}</strong><br />{`boolean, default false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the simulation plays automatically or not. If this is updated by external components, the simulation will stop or resume.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`loop`}</strong><br />{`boolean, default false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to true, the simulation restarts whenever it's stopped playing.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`nocache`}</strong><br />{`boolean, default false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to true, the simulation won't cache its data. If data is cached, then the user can go back in time without having to recalculate data.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`controls`}</strong><br />{`control object, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Describes the UI of the simulation. Controls is how the `}<inlineCode parentName=\"td\">{`params`}</inlineCode>{` in the state can be modified.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`noControls`}</strong><br />{`boolean, optional, default false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to true, the default controls won't be shown.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`showTimer`}</strong><br />{`boolean, optional, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to false, the default timer won't be displayed.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`showTime`}</strong><br />{`boolean, optional, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to false, only the play, stop and step-in button will be displayed, the slider and the indication of time won't be shown.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`showTimerSlider`}</strong><br />{`boolean, optional, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If set to false, the timer slider won't be displayed, though the indication of time may be.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`initData`}</strong><br />{`function, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The function that initializes the `}<inlineCode parentName=\"td\">{`data`}</inlineCode>{` of the model, when it first starts or when it's reset.`}<br />{`It takes `}<inlineCode parentName=\"td\">{`params`}</inlineCode>{` (in the state) as input, and outputs a value for `}<inlineCode parentName=\"td\">{`data`}</inlineCode>{` (which it puts in the state).`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`updateData`}</strong><br />{`function, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This function updates the `}<inlineCode parentName=\"td\">{`data`}</inlineCode>{` at each tick of the simualtion`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <UpdateData mdxType=\"UpdateData\" />\n    <Style mdxType=\"Style\" />\n\n\nexport const _frontmatter = {}\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}