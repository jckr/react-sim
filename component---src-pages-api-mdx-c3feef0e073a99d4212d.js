(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{BXRP:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return c})),a.d(t,"default",(function(){return p}));var n=a("zLVn"),r=(a("q1tI"),a("7ljp")),o=a("hoDs"),i=["components"],c={Title:"API reference"},b={_frontmatter:c};function p(e){var t=e.components,a=Object(n.a)(e,i);return Object(r.b)("wrapper",Object.assign({},b,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"A single-page reference of all the APIs used throughout ",Object(r.b)("inlineCode",{parentName:"p"},"React-Sim"),"."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"/react-sim/api#model"},"Model")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"/react-sim/api#withframe"},"withFrame")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"/react-sim/api#grid"},"grid")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"/react-sim/api#canvasframe"},"canvasFrame")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"/react-sim/api#timeseries"},"timeSeries"))),Object(r.b)("h1",{id:"model"},"Model"),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import {Model} from 'react-sim';\n\nfunction initData = params => { /* ... */ }\nfunction updateData =\n  ({data, params, tick, ...args}) => { /* ... */ }\nconst params = { /* ... */};\nfunction Frame =\n  ({data, params, tick, ...args}) => <>{ /* ... */ }</>;\n\nexport function MyModel = () => <Model\n  initalParams={params}\n  initData={initData}\n  updateData={updateData}\n>\n  <Frame />\n</Model>\n")),Object(r.b)("h2",{id:"state"},"State"),Object(r.b)(o.j,{mdxType:"ModelStateAPI"}),Object(r.b)("h2",{id:"properties"},"Properties"),Object(r.b)(o.i,{mdxType:"ModelPropsAPI"}),Object(r.b)("p",null,"For more information on controls and the syntax of the control object, see ",Object(r.b)("a",{parentName:"p",href:"/react-sim/controls"},"Controls"),"."),Object(r.b)("h1",{id:"frame-helpers"},"Frame Helpers"),Object(r.b)("h2",{id:"withframe"},"withFrame"),Object(r.b)("h3",{id:"usage-1"},"Usage"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import {Model, withFrame} from 'react-sim';\n\nconst FrameComponent = props => <>{ /* ... */ }</>;\nconst Frame = withFrame(FrameComponent);\n\nexport function MyModel = () => <Model>\n  <Frame />\n</Model>\n")),Object(r.b)("h3",{id:"api"},"API"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"withFrame")," is a wrapper around a ",Object(r.b)("a",{parentName:"p",href:"/react-sim/frames"},"Frame")," component."),Object(r.b)("p",null,"Wrapping a component with ",Object(r.b)("inlineCode",{parentName:"p"},"withFrame")," will expose the connected component to the following properties:\nThese properties come from the state of the ",Object(r.b)("inlineCode",{parentName:"p"},"Model")," this component is a descendant of."),Object(r.b)(o.s,{mdxType:"WithFrameAPI"}),Object(r.b)("p",null,"For convenience, a component which is a direct child of a ",Object(r.b)("inlineCode",{parentName:"p"},"Model")," automatically receives these properties without ",Object(r.b)("inlineCode",{parentName:"p"},"withFrame"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import {Model, withFrame} from 'react-sim';\n\nconst FrameComponent = props => <>{ /* ... */ }</>;\nconst Frame = withFrame(FrameComponent);\n\nexport function MyModel = () => <Model>\n  {/* this component has access to frame props */}\n  <FrameComponent />\n  <div>\n    {/* this one doesn't, because it's not a direct child */}\n    <FrameComponent />\n    {/* this component has access to frame props, because it's connected */}\n    <Frame />\n  </div>\n</Model>\n")),Object(r.b)("h2",{id:"grid"},"Grid"),Object(r.b)("p",null,"see ",Object(r.b)("a",{parentName:"p",href:"/react-sim/frame-helpers/grid"},"Grid guide")),Object(r.b)("h3",{id:"usage-2"},"Usage"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"  import {Model, Grid} from 'react-sim';\n\n  export function MyModel = () => <Model>\n    <Grid />\n  </Model>\n")),Object(r.b)("h3",{id:"api-1"},"API"),Object(r.b)(o.g,{mdxType:"GridAPI"}),Object(r.b)("h3",{id:"gridcomponent"},"GridComponent"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"import { GridComponent } from 'react-sim';\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Grid")," is wrapped with ",Object(r.b)("inlineCode",{parentName:"p"},"withFrame")," so it can be used anywhere in the tree. The corresponding, unwrapped component, ",Object(r.b)("inlineCode",{parentName:"p"},"GridComponent"),", can also be exported from ",Object(r.b)("inlineCode",{parentName:"p"},"react-sim"),"."),Object(r.b)("h2",{id:"canvasframe"},"CanvasFrame"),Object(r.b)("p",null,"see ",Object(r.b)("a",{parentName:"p",href:"/react-sim/frame-helpers/canvas-frame"},"CanvasFrame guide")),Object(r.b)("h3",{id:"usage-3"},"Usage"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"  import {Model, CanvasFrame} from 'react-sim';\n\n  function draw({ctx, data, ...args}) => {\n    /* canvas operations */\n  }\n\n  export function MyModel = () => <Model>\n    <CanvasFrame draw={draw} />\n  </Model>\n")),Object(r.b)("h3",{id:"api-2"},"API"),Object(r.b)(o.a,{mdxType:"CanvasFrameAPI"}),Object(r.b)("h3",{id:"circle"},"Circle"),Object(r.b)(o.b,{mdxType:"CircleAPI"}),Object(r.b)("h3",{id:"roundrectangle"},"RoundRectangle"),Object(r.b)(o.m,{mdxType:"RoundRectangleAPI"}),Object(r.b)("h3",{id:"draw"},"Draw"),Object(r.b)(o.f,{mdxType:"DrawAPI"}),Object(r.b)("h2",{id:"timeseries"},"TimeSeries"),Object(r.b)("p",null,"see ",Object(r.b)("a",{parentName:"p",href:"/react-sim/frame-helpers/time-series"},"TimeSeries guide"),"."),Object(r.b)("h3",{id:"series"},"Series"),Object(r.b)(o.o,{mdxType:"SeriesAPI"}),Object(r.b)("h3",{id:"timeseries-1"},"TimeSeries"),Object(r.b)(o.p,{mdxType:"TimeSeriesAPI"}),Object(r.b)("h3",{id:"counter"},"Counter"),Object(r.b)(o.d,{mdxType:"CounterAPI"}),Object(r.b)("h3",{id:"indicator"},"Indicator"),Object(r.b)(o.h,{mdxType:"IndicatorAPI"}),Object(r.b)("h2",{id:"controls"},"Controls"),Object(r.b)("p",null,"See ",Object(r.b)("a",{parentName:"p",href:"/react-sim/controls"},"Controls guide"),"."),Object(r.b)("h3",{id:"withcontrols"},"withControls"),Object(r.b)("p",null,"Components wrapped with ",Object(r.b)("inlineCode",{parentName:"p"},"withControls")," gain access to the following properties:"),Object(r.b)(o.r,{mdxType:"WithControlsAPI"}),Object(r.b)("h3",{id:"common-controls-properties"},"Common Controls Properties"),Object(r.b)("p",null,"Unless otherwise specified, all built-in controls have the following properties:"),Object(r.b)(o.c,{mdxType:"CommonControlsPropsAPI"}),Object(r.b)("h3",{id:"range"},"Range"),Object(r.b)("p",null,"See the ",Object(r.b)("a",{parentName:"p",href:"/react-sim/controls/range"},"Range guide"),"."),Object(r.b)(o.l,{mdxType:"RangeAPI"}),Object(r.b)("h3",{id:"timer"},"Timer"),Object(r.b)("h4",{id:"default-timer"},"Default Timer"),Object(r.b)("p",null,"See the ",Object(r.b)("a",{parentName:"p",href:"/react-sim/controls/default-timer"},"Default timer guide"),"."),Object(r.b)("p",null,"By default a ",Object(r.b)("inlineCode",{parentName:"p"},"Model")," comes with a built-in ",Object(r.b)("inlineCode",{parentName:"p"},"Timer")," control. For this defaut ",Object(r.b)("inlineCode",{parentName:"p"},"Timer"),", the following props come directly from ",Object(r.b)("inlineCode",{parentName:"p"},"Model")," (see ",Object(r.b)("a",{parentName:"p",href:"/react-sim/api/#model"},"Model properties"),".)"),Object(r.b)(o.e,{mdxType:"DefaultTimerAPI"}),Object(r.b)("h4",{id:"general-case"},"General case"),Object(r.b)("p",null,"See the ",Object(r.b)("a",{parentName:"p",href:"/react-sim/controls/timer"},"Timer guide"),"."),Object(r.b)("p",null,"If the ",Object(r.b)("inlineCode",{parentName:"p"},"Timer")," is defined anywhere else, these properties can be passed to the ",Object(r.b)("inlineCode",{parentName:"p"},"Timer")," directly."),Object(r.b)(o.q,{mdxType:"TimerAPI"}),Object(r.b)("h3",{id:"checkbox"},"Checkbox"),Object(r.b)("p",null,"See the ",Object(r.b)("a",{parentName:"p",href:"/react-sim/controls/checkbox"},"Checkbox guide.")),Object(r.b)("p",null,"Its API is solely the ",Object(r.b)("a",{parentName:"p",href:"/react-sim/api#common-controls-properties"},"Common Control Props.")),Object(r.b)("h3",{id:"input"},"Input"),Object(r.b)("p",null,"See the ",Object(r.b)("a",{parentName:"p",href:"/react-sim/controls/input"},"Input guide.")),Object(r.b)("p",null,"Its API is solely the ",Object(r.b)("a",{parentName:"p",href:"/react-sim/api#common-controls-properties"},"Common Control Props.")),Object(r.b)("h3",{id:"radio"},"Radio"),Object(r.b)("p",null,"See the ",Object(r.b)("a",{parentName:"p",href:"/react-sim/controls/radio"},"Radio guide.")),Object(r.b)(o.k,{mdxType:"RadioAPI"}),Object(r.b)("h3",{id:"select"},"Select"),Object(r.b)("p",null,"See the ",Object(r.b)("a",{parentName:"p",href:"/react-sim/controls/select"},"Select guide.")),Object(r.b)(o.n,{mdxType:"SelectAPI"}),Object(r.b)("h3",{id:"toggle"},"Toggle"),Object(r.b)("p",null,"See the ",Object(r.b)("a",{parentName:"p",href:"/react-sim/controls/toggle"},"Toggle guide.")),Object(r.b)("p",null,"Its API is solely the ",Object(r.b)("a",{parentName:"p",href:"/react-sim/api#common-controls-properties"},"Common Control Props.")))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-mdx-c3feef0e073a99d4212d.js.map