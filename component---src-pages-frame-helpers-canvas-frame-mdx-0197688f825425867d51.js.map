{"version":3,"sources":["webpack:///./src/components/examples/dice.js","webpack:///./src/pages/frame-helpers/canvas-frame.mdx","webpack:///./src/components/examples/frame-helpers-examples.js"],"names":["roll","random","Math","ceil","updateDice","data","tick","nbDice","params","lastTotals","totals","total","rolls","i","push","updatedTotals","average","initDice","Die","value","dotStyle","background","width","height","borderRadius","position","top","bottom","right","left","mid","style","marginRight","border","Bar","label","max","nbRolls","nbValues","theme","color","colors","primary","flexDirection","sx","justifyContent","alignItems","backgroundColor","fontSize","min","DiceFrame","render","this","props","minValue","Number","bars","Array","fill","map","d","index","key","bar","React","Component","Dice","useThemeUI","auto","controls","param","maxValue","resetOnChange","updateData","maxTime","initData","initialParams","_frontmatter","layoutProps","MDXContent","components","mdxType","parentName","isMDXComponent","Model","p","initDataCF","balls","speed","x","y","c","floor","vx","vy","updateDataGF","ball","draw","ctx","cachedData","circle","clearRect","age","globalAlpha","r","forEach","fillStyle","CanvasFrameExample","HOCDieFrame","withFrame","series","accessor","toFixed","stackedSeries","keys","slice","dots","String","TimeSeriesExample","fontWeight","stacked"],"mappings":"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","file":"component---src-pages-frame-helpers-canvas-frame-mdx-0197688f825425867d51.js","sourcesContent":["import React from 'react';\nimport { Play, Model } from 'react-sim';\nimport { useThemeUI } from 'theme-ui';\nimport { Flex } from 'rebass';\n\n// helpers\n\nconst roll = random => Math.ceil(random() * 6);\n\nexport function updateDice(\n  { data, tick, params: { nbDice } },\n  random = Math.random\n) {\n  const lastTotals = data.totals;\n\n  // we roll the dice...\n  let total = 0;\n  const rolls = [];\n  for (let i = 0; i < nbDice; i++) {\n    rolls.push(roll(random));\n    total += rolls[i];\n  }\n\n  // and update the totals\n  const updatedTotals = {\n    ...lastTotals,\n    [total]: (lastTotals[total] || 0) + 1,\n  };\n\n  const average = (data.average * (tick - 1) + data.total) / tick;\n\n  return { rolls, average, total, totals: updatedTotals };\n}\n\nexport function initDice({ nbDice }) {\n  return {\n    rolls: [],\n    average: 3.5 * nbDice,\n    total: 0,\n    totals: {},\n  };\n}\n\nexport const Die = ({ value }) => {\n  const dotStyle = {\n    background: '#000',\n    width: 3,\n    height: 3,\n    borderRadius: '100%',\n    position: 'absolute',\n  };\n  const top = { top: 3 };\n  const bottom = { bottom: 3 };\n  const right = { right: 3 };\n  const left = { left: 3 };\n  const mid = { top: 8 };\n  const center = { left: 8 };\n  return (\n    <div\n      style={{\n        width: 21,\n        height: 21,\n        marginRight: 10,\n        position: 'relative',\n        border: '1px solid #000',\n        borderRadius: '3px',\n      }}\n    >\n      {value !== 1 && <div style={{ ...dotStyle, ...top, ...left }} />}\n      {value > 3 && <div style={{ ...dotStyle, ...top, ...right }} />}\n      {value === 6 && <div style={{ ...dotStyle, ...mid, ...left }} />}\n      {value % 2 === 1 && <div style={{ ...dotStyle, ...mid, ...center }} />}\n      {value === 6 && <div style={{ ...dotStyle, ...mid, ...right }} />}\n      {value > 3 && <div style={{ ...dotStyle, ...bottom, ...left }} />}\n      {value !== 1 && <div style={{ ...dotStyle, ...bottom, ...right }} />}\n    </div>\n  );\n};\n\nconst Bar = ({ label, max, nbRolls, nbValues, theme }) => {\n  const height = max ? (50 * nbRolls) / max : 0;\n  const width = 500 / nbValues;\n  const color = theme?.colors?.primary || '#33f';\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex\n        flexDirection=\"row\"\n        sx={{\n          justifyContent: 'center',\n          alignItems: 'flex-end',\n          width,\n          height: '50px',\n        }}\n      >\n        <div style={{ width: width * 0.8, height, backgroundColor: color }} />\n      </Flex>\n      <Flex\n        flexDirection=\"row\"\n        sx={{\n          justifyContent: 'center',\n          fontSize: `${Math.min((500 / 2) * nbValues, 12)}px`,\n        }}\n      >\n        {label}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport class DiceFrame extends React.Component {\n  render() {\n    if (this.props.data === null) {\n      return null;\n    }\n    const {\n      data,\n      tick,\n      params: { nbDice },\n      theme,\n    } = this.props;\n\n    const minValue = Number(nbDice);\n    const maxValue = minValue * 6;\n    const nbValues = maxValue - minValue + 1;\n\n    const { rolls, totals } = data;\n    let max = 0;\n    const bars = Array(nbValues)\n      .fill(0)\n      .map((d, i) => {\n        const label = minValue + i;\n        const nbRolls = totals[label] || 0;\n        max = Math.max(max, nbRolls);\n        return { label, nbRolls };\n      });\n\n    return (\n      <Flex\n        flexDirection=\"column\"\n        sx={{ justifyContent: 'space-between', height: '140px' }}\n      >\n        <Flex flexDirection=\"row\">\n          {rolls.map((value, index) => (\n            <Die value={value} key={`k-${index}`} />\n          ))}\n        </Flex>\n        <Flex\n          flexDirection=\"row\"\n          sx={{ alignItems: 'flex-end', height: '80px' }}\n        >\n          {bars.map(bar => (\n            <Bar\n              {...bar}\n              key={bar.label}\n              max={max}\n              nbValues={nbValues}\n              theme={theme}\n            />\n          ))}\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nconst Dice = () => {\n  const context = useThemeUI();\n  const { theme } = context;\n  return (\n    <>\n      <Model\n        theme={theme}\n        auto={false}\n        controls={{\n          param: 'nbDice',\n          minValue: 1,\n          maxValue: 6,\n          resetOnChange: true,\n          label: 'Number of dice per roll',\n        }}\n        updateData={updateDice}\n        maxTime={1000}\n        initData={initDice}\n        initialParams={{\n          nbDice: 5,\n        }}\n      >\n        <DiceFrame theme={theme} />\n      </Model>\n    </>\n  );\n};\n\nexport default Dice;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { CanvasFrameExample } from '../../components/examples/frame-helpers-examples.js';\nexport const _frontmatter = {\n  \"Title\": \"Canvas Frame\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p><inlineCode parentName=\"p\">{`CanvasFrame`}</inlineCode>{` is a `}<a parentName=\"p\" {...{\n        \"href\": \"./frame-helpers\"\n      }}>{`frame helper`}</a>{` that makes it easier to use canvas with react-sim.`}</p>\n    <p>{`It's used in many of the examples such as `}<a parentName=\"p\" {...{\n        \"href\": \"./examples/chaos-game\"\n      }}>{`Chaos Game`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"./examples/percolation\"\n      }}>{`Percolation`}</a>{`) `}<a parentName=\"p\" {...{\n        \"href\": \"./examples/epidemic\"\n      }}>{`Epidemic simulation`}</a>{`, etc.`}</p>\n    <CanvasFrameExample mdxType=\"CanvasFrameExample\" />\n    <h1>{`CanvasFrame properties`}</h1>\n    <p>{`Its properties are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`all the connected Frame context props (`}<inlineCode parentName=\"li\">{`cachedData`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`data`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`initData`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`params`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`results`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`tick`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`setData`}</inlineCode>{` ),`}</li>\n      <li parentName=\"ul\">{`draw (function, optional): a function which will be called each time CanvasFrame is updated (ie at each animation cycle).`}</li>\n      <li parentName=\"ul\">{`height (number, optional): the height of the canvas. If ignored, CanvasFrame will used params.height.`}</li>\n      <li parentName=\"ul\">{`width (number, optional): the width of the canvas. If ignored, CanvasFrame will used params.height.`}</li>\n    </ul>\n    <h1>{`the draw function`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`draw`}</inlineCode>{` function does all the heavy lifting.`}</p>\n    <p>{`Its argument is an object with the following properties:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`all the CanvasFrame properties (data, tick, etc. - see above),`}</li>\n      <li parentName=\"ul\">{`canvas (DOM Node): the actual canvas node.`}</li>\n      <li parentName=\"ul\">{`ctx: (canvas rendering context): the corresponding 2d context. Exactly what you'd get if you typed `}<inlineCode parentName=\"li\">{`const ctx = canvas.getContext('2d');`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`circle (helper function): see below`}</li>\n      <li parentName=\"ul\">{`roundRectangle (helper function): see below`}</li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`circle`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`roundRectangle`}</inlineCode>{` are helper functions to make it easier to draw circles and rounded rectangles with canvas.`}</p>\n    <p>{`Both take an object as argument with the following properties:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`circle:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`x: x coordinate of circle center,`}</li>\n          <li parentName=\"ul\">{`y: y coordinate of circle center,`}</li>\n          <li parentName=\"ul\">{`r: radius of circle`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`roundRectangle:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`x: x coordinate of top-left corner of rectangle,`}</li>\n          <li parentName=\"ul\">{`y: y coordinate of top-left corner of rectangle,`}</li>\n          <li parentName=\"ul\">{`width: width of rectangle,`}</li>\n          <li parentName=\"ul\">{`height: height of rectangle,`}</li>\n          <li parentName=\"ul\">{`tl: radius of top-left corner,`}</li>\n          <li parentName=\"ul\">{`tr: radius of top-right corner,`}</li>\n          <li parentName=\"ul\">{`bl: radius of bottom-left corner,`}</li>\n          <li parentName=\"ul\">{`br: radius of botrom-right corner,`}</li>\n          <li parentName=\"ul\">{`r: radius of all unspecified corners.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`so for example, you can have a `}<inlineCode parentName=\"p\">{`draw`}</inlineCode>{` function that would go like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const draw = ({ctx, data, circle, params}) => {\n  const {height, width} = params;\n  ctx.clearReact(0, 0, width, height);\n  data.forEach(d => circle({x: d.x, y: d.y, 2}));\n  ctx.fill();\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport {\n  Model as RawModel,\n  CanvasFrame,\n  Grid,\n  TimeSeries,\n  Counter,\n  Indicator,\n  withFrame,\n} from 'react-sim';\nimport { Flex, Text } from 'rebass';\n\nimport { initDice, updateDice, Die } from './dice';\n\nconst Model = props => (\n  <Flex sx={{ border: '1px solid currentcolor', p: 2, width: 'fit-content' }}>\n    <RawModel {...props} />\n  </Flex>\n);\n\nconst initDataCF = ({ height, width, balls, speed }) =>\n  Array(balls)\n    .fill(0)\n    .map(d => ({\n      x: Math.random() * width,\n      y: Math.random() * height,\n      c: `hsl(${Math.floor(Math.random() * 360)},85%,57%)`,\n\n      vx: (Math.random() - 0.5) * speed,\n      vy: (Math.random() - 0.5) * speed,\n    }));\n\nconst updateDataGF = ({ data, params }) =>\n  data.map(({ x, y, ...ball }) => ({\n    x: (x + ball.vx) % params.width,\n    y: (y + ball.vy) % params.height,\n    ...ball,\n  }));\n\nconst draw = ({ ctx, cachedData, data, circle, params, tick }) => {\n  const { height, width } = params;\n  ctx.clearRect(0, 0, width, height);\n\n  for (let i = Math.max(tick - 10, 0); i < tick; i++) {\n    const age = tick - i;\n    ctx.globalAlpha = 0.1 + (10 - age) * 0.05;\n    const r = 0.3 * (10 - age);\n    cachedData[i].forEach(d => {\n      ctx.fillStyle = d.c;\n      circle({ x: d.x, y: d.y, r });\n      ctx.fill();\n    });\n  }\n  ctx.globalAlpha = 1;\n  data.forEach(d => {\n    ctx.fillStyle = d.c;\n    circle({ x: d.x, y: d.y, r: 3 });\n    ctx.fill();\n  });\n};\n\nexport const CanvasFrameExample = () => (\n  <Model\n    initData={initDataCF}\n    updateData={updateDataGF}\n    maxTime={500}\n    initialParams={{\n      height: 200,\n      width: 500,\n      balls: 200,\n      speed: 3,\n    }}\n  >\n    <CanvasFrame draw={draw} />\n  </Model>\n);\n\nconst DieFrame = ({ data }) => {\n  return (\n    <Flex flexDirection=\"row\" sx={{ height: '30px' }}>\n      {data.rolls.map((value, index) => (\n        <Die value={value} key={`k-${index}`} />\n      ))}\n    </Flex>\n  );\n};\n\nconst HOCDieFrame = withFrame(DieFrame);\n\nconst average = {\n  color: '#33e',\n  label: 'Average',\n  accessor: d => Number(d.average.toFixed(2)),\n};\n\nconst series = [\n  average,\n  {\n    color: '#e3e',\n    label: 'Last roll',\n    accessor: d => d.total,\n  },\n];\n\nconst stackedSeries = [...Array(13).keys()].slice(2).map(dots => ({\n  color: `hsl(${(360 * (1 + dots - 2)) / 11},85%,57%)`,\n  label: String(dots),\n  accessor: d => d.totals[dots] || 0,\n}));\n\nexport const TimeSeriesExample = () => (\n  <Model\n    initData={initDice}\n    updateData={updateDice}\n    initialParams={{ nbDice: 2 }}\n  >\n    <Flex flexDirection=\"column\">\n      <Text sx={{ fontSize: 1, fontWeight: 'bold' }}>Roll:</Text>\n      <HOCDieFrame />\n      <Text sx={{ fontSize: 1, fontWeight: 'bold' }}>Average rolls:</Text>\n      <TimeSeries series={series} />\n      <Counter series={series} />\n      <Text sx={{ fontSize: 1, fontWeight: 'bold' }}>Roll distribution:</Text>\n      <TimeSeries series={stackedSeries} stacked />\n      <Counter series={stackedSeries.slice(0,6)} />\n      <Counter series={stackedSeries.slice(6)} />\n    </Flex>\n  </Model>\n);\n"],"sourceRoot":""}