(window.webpackJsonp=window.webpackJsonp||[]).push([[19,18],{"0bOf":function(t,e,a){"use strict";a.r(e),a.d(e,"_frontmatter",(function(){return o})),a.d(e,"default",(function(){return c}));var n=a("zLVn"),b=(a("q1tI"),a("7ljp")),r=["components"],o={},l={_frontmatter:o};function c(t){var e=t.components,a=Object(n.a)(t,r);return Object(b.b)("wrapper",Object.assign({},l,a,{components:e,mdxType:"MDXLayout"}),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Name"),Object(b.b)("th",{parentName:"tr",align:null},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},"options"),Object(b.b)("br",null),"array option objects"),Object(b.b)("td",{parentName:"tr",align:null},"options is an array of option objects, which have ",Object(b.b)("em",{parentName:"td"},"label")," and ",Object(b.b)("em",{parentName:"td"},"value")," properties. ",Object(b.b)("em",{parentName:"td"},"label")," is a string, ",Object(b.b)("em",{parentName:"td"},"value")," can be a string, a number or a boolean. ",Object(b.b)("em",{parentName:"td"},"label")," is what is displayed, ",Object(b.b)("em",{parentName:"td"},"value")," is the value that will be passed when the control changes. If ",Object(b.b)("em",{parentName:"td"},"label")," and ",Object(b.b)("em",{parentName:"td"},"value")," are identical, instead of an object a simple string can be used.")))))}c.isMDXComponent=!0},xlzG:function(t,e,a){"use strict";a.r(e),a.d(e,"_frontmatter",(function(){return l})),a.d(e,"default",(function(){return p}));var n=a("zLVn"),b=(a("q1tI"),a("7ljp")),r=a("0bOf"),o=["components"],l={},c={_frontmatter:l};function p(t){var e=t.components,a=Object(n.a)(t,o);return Object(b.b)("wrapper",Object.assign({},c,a,{components:e,mdxType:"MDXLayout"}),Object(b.b)("p",null,"The ",Object(b.b)("a",{parentName:"p",href:"/react-sim/api#common-controls-props"},"Common controls props")," properties, plus:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Name"),Object(b.b)("th",{parentName:"tr",align:null},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},"vertical"),Object(b.b)("br",null),"boolean, optional, false by default"),Object(b.b)("td",{parentName:"tr",align:null},"Whether the options are shown horizontally or vertically.")))),Object(b.b)(r.default,{mdxType:"Options"}))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-radio-mdx-6c808b29baa822c14774.js.map