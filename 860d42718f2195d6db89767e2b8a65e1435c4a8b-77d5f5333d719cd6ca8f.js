(window.webpackJsonp=window.webpackJsonp||[]).push([[3,7,8,9,10,11,12,13,14,16,17,18,19,20,22,23,24,25,26,27],{"2OXv":function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"isPlaying"),Object(a.b)("br",null),"boolean"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"tells your custom control if the simulation is playing.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"params"),Object(a.b)("br",null),"object"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"any and all of the simulation parameters.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"pause"),Object(a.b)("br",null),"function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"call this function to ",Object(a.b)("em",{parentName:"td"},"pause")," the simulation (it stops playing, but is not reset.)")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"play"),Object(a.b)("br",null),"function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"call this function to start or resume playing the simulation.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"stop"),Object(a.b)("br",null),"function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"call this function to stop the simulation (stops playing, time is reset to default, data of simulation is reset.)")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"updateTime"),Object(a.b)("br",null),"fuction"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"call with a number to update the ",Object(a.b)("inlineCode",{parentName:"td"},"tick")," value in the simulation.")))))}l.isMDXComponent=!0},BvgZ:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"data"),Object(a.b)("br",null),"Array"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"It expects data to be a 2-dimensional array of data.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"accessor"),Object(a.b)("br",null),"function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"How to determine how to color each cell. The inputs of the function are:",Object(a.b)("br",null),"cell (content of the cell), x , y. The output is: a color. The default value is:",Object(a.b)("br",null),Object(a.b)("inlineCode",{parentName:"td"},"cell => cell ? 0 : 'none' : '#000'"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"size"),Object(a.b)("br",null),"string/integer, default: 12"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"How big the squares will be in pixels.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"cellProps"),Object(a.b)("br",null),"anything"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Any extra prop to pass to each individual square")))),Object(a.b)("p",null,"Any other prop will be passed to the Grid."))}l.isMDXComponent=!0},DfeS:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"series"),Object(a.b)("br",null),"series object or array"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Either a single ",Object(a.b)("a",Object.assign({parentName:"td"},{href:"/react-sim/api#series"}),"series")," object or an array of series. the accessor function is going to be called on every item in ",Object(a.b)("inlineCode",{parentName:"td"},"cachedData")," and the result will be plotted.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"stacked"),Object(a.b)("br",null),"boolean, default: false"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"If true, represents the time series as full-height, stacked area charts. If false, the series are line charts.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"height"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Height of the chart.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"padding"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Padding of the chart.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"width"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Width of the chart.")))))}l.isMDXComponent=!0},FFgS:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"roundRectangle")," takes an object as argument with the following properties:"),Object(a.b)("p",null,"All the ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/api/#canvasframe"}),"CanvasFrame")," properties, plus:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"x"),Object(a.b)("br",null),"number"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"x coordinate of top-left corner of rectangle")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"y"),Object(a.b)("br",null),"number"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"y coordinate of top-left corner of rectangle")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"width"),Object(a.b)("br",null),"number"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Width of rectangle")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"height"),Object(a.b)("br",null),"number"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Height of rectangle")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"tl"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Radius of top-left corner")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"tr"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Radius of top-right corner")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"bl"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Radius of bottom-left corner")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"br"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Radius of botrom-right corner")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"r"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Radius of all unspecified corners")))))}l.isMDXComponent=!0},IiH9:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"All the ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/api/#canvasframe"}),"CanvasFrame")," properties, plus:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"canvas"),Object(a.b)("br",null),"DOM Node"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The actual canvas node")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"ctx"),Object(a.b)("br",null),"Canvas rendering context"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"the corresponding 2d context.",Object(a.b)("br",null),"Exactly what you'd get if you typed",Object(a.b)("br",null)," ",Object(a.b)("inlineCode",{parentName:"td"},"const ctx = canvas.getContext('2d');"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"circle"),Object(a.b)("br",null),"Helper function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"see ",Object(a.b)("a",Object.assign({parentName:"td"},{href:"/react-sim/api#circle"}),"circle API"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"roundRectangle"),Object(a.b)("br",null),"Helper function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"see ",Object(a.b)("a",Object.assign({parentName:"td"},{href:"/react-sim/api#roundrectangle"}),"roundRectangle API"))))))}l.isMDXComponent=!0},K9lO:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"type"),Object(a.b)("br",null),"string, optional, 'range' by default"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The kind of control we're describing. Can be one of: ",Object(a.b)("inlineCode",{parentName:"td"},"checkbox"),", ",Object(a.b)("inlineCode",{parentName:"td"},"input"),", ",Object(a.b)("inlineCode",{parentName:"td"},"radio"),", ",Object(a.b)("inlineCode",{parentName:"td"},"range"),", ",Object(a.b)("inlineCode",{parentName:"td"},"select"),", ",Object(a.b)("inlineCode",{parentName:"td"},"timer")," or ",Object(a.b)("inlineCode",{parentName:"td"},"toggle"),".")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"label"),Object(a.b)("br",null),"string, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The label which will describe the control.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"name"),Object(a.b)("br",null),"string, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The name of the control. If not specified, ",Object(a.b)("inlineCode",{parentName:"td"},"label")," will be used.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"resetOnChange"),Object(a.b)("br",null),"boolean, optional, false by default"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the model will be reset if the control changes.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"setValue"),Object(a.b)("br",null),"function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"This function will be called whenever the control changes to update its value.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"value"),Object(a.b)("br",null),"any"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The current value of the control.")))))}l.isMDXComponent=!0},NgAi:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"series"),Object(a.b)("br",null),"series object or array"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"A single ",Object(a.b)("a",Object.assign({parentName:"td"},{href:"/react-sim/api#series"}),"series")," object. The accessor function is going to be called on every item in ",Object(a.b)("inlineCode",{parentName:"td"},"data")," and a single number will be shown per series.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"height"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Height of the indicator card.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"padding"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Padding of the indicator card.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"width"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Width of the indicator card.")))))}l.isMDXComponent=!0},R5WI:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"minTime"),Object(a.b)("br",null),"integer, 0 by default"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"at which position the timer starts. Can be negative.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"maxTime"),Object(a.b)("br",null),"integer, 100 by default"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"at which position the timer ends.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"showTime"),Object(a.b)("br",null),"boolean, true by default"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the time block (i.e. slider and time value) is going to be shown.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"showTimeSlider"),Object(a.b)("br",null),"boolean, true by default"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the time slider is going to be shown.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"showTimer"),Object(a.b)("br",null),"boolean, true by default"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the Timer is shown at all. If the Timer is not shown, you will have to provide another way to start the simulation (or effectively force the user to stay on the initial state).")))))}l.isMDXComponent=!0},SIm0:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"series"),Object(a.b)("br",null),"series object or array"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Either a single ",Object(a.b)("a",Object.assign({parentName:"td"},{href:"/react-sim/api/#series"}),"series")," object or an array of series. the accessor function is going to be called on every item in ",Object(a.b)("inlineCode",{parentName:"td"},"data")," and a single number will be shown per series.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"height"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Height of the counter card.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"padding"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Padding of the counter card.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"width"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Width of the counter card.")))))}l.isMDXComponent=!0},VTWx:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Its arguments are of the form:\n",Object(a.b)("inlineCode",{parentName:"p"},"({cachedData, complete, data, params, pause, stop})"),". Its output will replace ",Object(a.b)("inlineCode",{parentName:"p"},"data")," in the state."),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"data"),Object(a.b)("br",null),"any"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Represents the current value of data.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"tick"),Object(a.b)("br",null),"integer"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Represents the new tick.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"params"),Object(a.b)("br",null),"object"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Represents the current parameters.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"cachedData"),Object(a.b)("br",null),"object"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"An object so that for each past value of ",Object(a.b)("inlineCode",{parentName:"td"},"tick"),", ",Object(a.b)("inlineCode",{parentName:"td"},"cachedData[tick]")," represents the value of ",Object(a.b)("inlineCode",{parentName:"td"},"data")," at that moment of the simulation.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"complete"),Object(a.b)("br",null),"function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"A function that signals the simulation is complete (it will also stop).")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"pause"),Object(a.b)("br",null),"function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"A function that will stop the simulation from automatically updating and animating.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"stop"),Object(a.b)("br",null),"function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"A function that will stop the simulation from automatically updating and animating, and will reset it.")))))}l.isMDXComponent=!0},"aA/G":function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"data"),Object(a.b)("br",null),"any"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Represents the current state of the simulation.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"tick"),Object(a.b)("br",null),"integer"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"A measure of time in the simulation. Each time the simulation updates, ticks increases by one.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"params"),Object(a.b)("br",null),"Object"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The parameters of the simulation.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"isPlaying"),Object(a.b)("br",null),"boolean"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the simulation is running or not.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"results"),Object(a.b)("br",null),"any"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Is updated each time the simulation finishes, and contains information on the past runs.")))),Object(a.b)("p",null,"The difference between ",Object(a.b)("inlineCode",{parentName:"p"},"data")," and ",Object(a.b)("inlineCode",{parentName:"p"},"params")," is that ",Object(a.b)("inlineCode",{parentName:"p"},"data")," is being updated at each simulation tick, without user intervention, through the ",Object(a.b)("inlineCode",{parentName:"p"},"updateData")," function, whereas ",Object(a.b)("inlineCode",{parentName:"p"},"params")," is only modified when the user interacts with the ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/controls"}),"controls"),"."),Object(a.b)("p",null,"The built-in parameters are:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"delay"),Object(a.b)("br",null),"number"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"delay between animation refreshes in miliseconds.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"maxTime"),Object(a.b)("br",null),"integer"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"the value of ",Object(a.b)("inlineCode",{parentName:"td"},"tick")," at which the animation stops.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"minTime"),Object(a.b)("br",null),"integer"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"the value of ",Object(a.b)("inlineCode",{parentName:"td"},"tick")," when the animation starts.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"ticksPerAnimation"),Object(a.b)("br",null),"integer"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"the number of simulation ticks per animation refresh. If more than one, the simulation will update several times before it's rendered again.")))))}l.isMDXComponent=!0},f4hJ:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"circle")," takes an object as argument with the following properties:"),Object(a.b)("p",null,"All the ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/api/#canvasframe"}),"CanvasFrame")," properties, plus:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"x"),Object(a.b)("br",null),"number"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"x coordinate of circle center")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"y"),Object(a.b)("br",null),"number"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"y coordinate of circle center")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"r"),Object(a.b)("br",null),"number"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Radius of circle")))))}l.isMDXComponent=!0},hoDs:function(t,e,n){"use strict";var a=n("qEe1");n.d(e,"a",(function(){return a.default}));var b=n("f4hJ");n.d(e,"b",(function(){return b.default}));var r=n("K9lO");n.d(e,"c",(function(){return r.default}));var l=n("SIm0");n.d(e,"d",(function(){return l.default}));var c=n("R5WI");n.d(e,"e",(function(){return c.default}));var i=n("IiH9");n.d(e,"f",(function(){return i.default}));var s=n("BvgZ");n.d(e,"g",(function(){return s.default}));var o=n("NgAi");n.d(e,"h",(function(){return o.default}));var j=n("oTG4");n.d(e,"i",(function(){return j.default}));var O=n("aA/G");n.d(e,"j",(function(){return O.default}));var p=n("xlzG");n.d(e,"k",(function(){return p.default}));var u=n("zZaf");n.d(e,"l",(function(){return u.default}));var m=n("FFgS");n.d(e,"m",(function(){return m.default})),n.d(e,"n",(function(){return p.default}));var d=n("q9hn");n.d(e,"o",(function(){return d.default}));var g=n("zMld");n.d(e,"q",(function(){return g.default}));var N=n("DfeS");n.d(e,"p",(function(){return N.default}));n("VTWx");var h=n("2OXv");n.d(e,"r",(function(){return h.default}));var f=n("nna4");n.d(e,"s",(function(){return f.default}))},nna4:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"data"),Object(a.b)("br",null),"anything"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"the current state of the simulation")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"tick"),Object(a.b)("br",null),"integer"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"the progress in the simulation")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"params"),Object(a.b)("br",null),"object"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"all the parameters set by the user/author")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"cachedData"),Object(a.b)("br",null),"object"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"data from previous ",Object(a.b)("inlineCode",{parentName:"td"},"ticks")," of the simulation")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"results"),Object(a.b)("br",null),"array"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"data from previous completed runs of the simulation")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"initData"),Object(a.b)("br",null),"function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"the Frame can reinitialize data")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"setData"),Object(a.b)("br",null),"function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"the Frame can change the data (so for instance the Frame can be used to let the user enter an initial state of data)")))))}l.isMDXComponent=!0},oTG4:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return r})),n.d(e,"default",(function(){return c}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp"),b=n("VTWx");var r={},l={_frontmatter:r};function c(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},l,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"initialTick"),Object(a.b)("br",null),"number, optional, default 0"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The initial value for ",Object(a.b)("inlineCode",{parentName:"td"},"tick"),".")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"initalParams"),Object(a.b)("br",null),"object, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The initial value for the ",Object(a.b)("inlineCode",{parentName:"td"},"params")," of the simulation. When the simulation starts, it is used to populate ",Object(a.b)("inlineCode",{parentName:"td"},"params")," in the state.")))),Object(a.b)("p",null,"The following properties can be used as is, or be passed inside ",Object(a.b)("inlineCode",{parentName:"p"},"initialParams"),",i.e."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Model delay={100} />\n")),Object(a.b)("p",null,"or"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Model initialParams={{ delay: 100 }} />\n")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"initialParams")," takes precedence if both are used. They provide an initial value for the corresponding parts of the state."),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"delay"),Object(a.b)("br",null),"number, optional, default 0"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The delay between each animation refresh. If not specified, animations happen as fast as possible (up to 60 times per second).")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"minTime"),Object(a.b)("br",null),"integer, optional, default 0"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The value of ",Object(a.b)("inlineCode",{parentName:"td"},"tick")," when the animation starts")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"maxTime"),Object(a.b)("br",null),"integer, optional, default 100"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The value of ",Object(a.b)("inlineCode",{parentName:"td"},"tick")," at which the animation stops")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"ticksPerAnimation"),Object(a.b)("br",null),"integer, optional, default 1"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The number of simulation ticks per animation refresh. If more than one, the simulation will update several times before it's rendered again.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"isPlaying"),Object(a.b)("br",null),"boolean, default false"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the simulation plays automatically or not. If this is updated by external components, the simulation will stop or resume.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"loop"),Object(a.b)("br",null),"boolean, default false"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"If set to true, the simulation restarts whenever it's stopped playing.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"nocache"),Object(a.b)("br",null),"boolean, default false"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"If set to true, the simulation won't cache its data. If data is cached, then the user can go back in time without having to recalculate data.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"controls"),Object(a.b)("br",null),"control object, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Describes the UI of the simulation. Controls is how the ",Object(a.b)("inlineCode",{parentName:"td"},"params")," in the state can be modified.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"noControls"),Object(a.b)("br",null),"boolean, optional, default false"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"If set to true, the default controls won't be shown.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"showTimer"),Object(a.b)("br",null),"boolean, optional, default true"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"If set to false, the default timer won't be displayed.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"showTime"),Object(a.b)("br",null),"boolean, optional, default true"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"If set to false, only the play, stop and step-in button will be displayed, the slider and the indication of time won't be shown.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"showTimerSlider"),Object(a.b)("br",null),"boolean, optional, default true"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"If set to false, the timer slider won't be displayed, though the indication of time may be.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"initData"),Object(a.b)("br",null),"function, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The function that initializes the ",Object(a.b)("inlineCode",{parentName:"td"},"data")," of the model, when it first starts or when it's reset.",Object(a.b)("br",null),"It takes ",Object(a.b)("inlineCode",{parentName:"td"},"params")," (in the state) as input, and outputs a value for ",Object(a.b)("inlineCode",{parentName:"td"},"data")," (which it puts in the state).")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"updateData"),Object(a.b)("br",null),"function, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"This function updates the ",Object(a.b)("inlineCode",{parentName:"td"},"data")," at each tick of the simualtion")))),Object(a.b)(b.default,{mdxType:"UpdateData"}))}c.isMDXComponent=!0},q9hn:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"series")," is an object with three properties:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"label"),Object(a.b)("br",null),"string"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Describes the series,")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"color"),Object(a.b)("br",null),"string"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Color of the series,")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"accessor"),Object(a.b)("br",null),"function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Function that turns a data object into the value that you want to plot.")))))}l.isMDXComponent=!0},qEe1:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"All the ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/api/#withframe"}),"connected Frame")," context props, plus:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"draw"),Object(a.b)("br",null),"function, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"A function which will be called each time CanvasFrame is updated (ie at each animation cycle)")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"height"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The height of the canvas. If ignored, CanvasFrame will used ",Object(a.b)("inlineCode",{parentName:"td"},"params.height"),".")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"width"),Object(a.b)("br",null),"number, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The width of the canvas. If ignored, CanvasFrame will used ",Object(a.b)("inlineCode",{parentName:"td"},"params.width"),".")))))}l.isMDXComponent=!0},xlzG:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/api#common-controls-props"}),"Common controls props")," properties, plus:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"options"),Object(a.b)("br",null),"Array of strings"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The various items that can be selected through this control.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"vertical"),Object(a.b)("br",null),"boolean, optional, false by default"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the options are shown horizontally or vertically.")))))}l.isMDXComponent=!0},zMld:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/api#default-timer"}),"Default timer")," properties, plus:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"maxTime"),Object(a.b)("br",null),"integer, 100 by default"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"At which position the timer ends.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"minTime"),Object(a.b)("br",null),"integer, 0 by default"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"At which position the timer starts. Can be negative.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"label"),Object(a.b)("br",null),"string, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The label which will describe the control.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"name"),Object(a.b)("br",null),"string, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The name of the control. If not specified, label is used.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"shouldDisplayLabel"),Object(a.b)("br",null),"boolean, default true"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the label should be displayed.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"shouldDisplayMaxValue"),Object(a.b)("br",null),"boolean, default true"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the maximum value should be displayed to the right of the range.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"shouldDisplayMinValue"),Object(a.b)("br",null),"boolean, default true"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the minimum value should be displayed to the left of the range.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"shouldDisplayValue"),Object(a.b)("br",null),"boolean, default true"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the value should be displayed next to the label.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"showTime"),Object(a.b)("br",null),"boolean, true by default"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the time block (i.e. slider and time value) is going to be shown.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"showTimeSlider"),Object(a.b)("br",null),"boolean, true by default"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the time slider is going to be shown.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"time"),Object(a.b)("br",null),"number"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The current value of time shown on this Timer")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"updateTime"),Object(a.b)("br",null),"function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The function that will update this Timer's time when the")))),Object(a.b)("p",null,"Unlike the other built-in controls, Timer does ",Object(a.b)("em",{parentName:"p"},"not")," take a ",Object(a.b)("inlineCode",{parentName:"p"},"value")," or a ",Object(a.b)("inlineCode",{parentName:"p"},"setValue")," parameter."))}l.isMDXComponent=!0},zZaf:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return b})),n.d(e,"default",(function(){return l}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/"),n("q1tI");var a=n("7ljp");var b={},r={_frontmatter:b};function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,b={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(b[n]=t[n]);return b}(t,["components"]);return Object(a.b)("wrapper",Object.assign({},r,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"All ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/api#common-control-props"}),"Common control props")," properties, plus:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"maxValue"),Object(a.b)("br",null),"number, optional, default 100"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The value corresponding to the end of the range.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"minValue"),Object(a.b)("br",null),"number, optional, default 0"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The value corresponding to the beginning of the range.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"name"),Object(a.b)("br",null),"string, optional"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The name of the control. If not specified, label is used.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"shouldDisplayLabel"),Object(a.b)("br",null),"boolean, default true"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the label should be displayed.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"shouldDisplayMaxValue"),Object(a.b)("br",null),"boolean, default true"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the maximum value should be displayed to the right of the range.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"shouldDisplayMinValue"),Object(a.b)("br",null),"boolean, default true"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the minimum value should be displayed to the left of the range.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"shouldDisplayValue"),Object(a.b)("br",null),"boolean, default true"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the value should be displayed next to the label.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"shouldDisplaySlider"),Object(a.b)("br",null),"boolean, default true"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Whether the slider should be displayed. If the slider is not displayed, the min and max values are also hidden.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"step"),Object(a.b)("br",null),"number, optional, default 1"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"The amount by which the value will be incremeneted or decremented when moving the range cursor.")))))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=860d42718f2195d6db89767e2b8a65e1435c4a8b-77d5f5333d719cd6ca8f.js.map