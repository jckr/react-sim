{"version":3,"sources":["webpack:///./src/pages/controls/pre-defined-types.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kRAMO,IAAMA,EAAe,CAC1B,MAAS,qBAQLC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,6BADR,6BAGA,mGAAkF,0BAAYC,WAAW,KAAvB,YAAlF,qBAA4J,0BAAYA,WAAW,KAAvB,SAA5J,KACA,oEAAmD,kBAAIA,WAAW,KAAf,6BAAnD,KACA,iDACA,sBACE,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,iCADQ,aAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,8BADQ,UAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,+BADQ,WAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,8BADQ,UAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,+BADQ,WAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,8BADQ,UAGpB,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,8BADQ,WAItB,4BAAW,0BAAYA,WAAW,KAAvB,YAAX,kBACA,sBACE,kBAAIA,WAAW,MAAf,oEACA,kBAAIA,WAAW,MAAf,kCAAuD,+BAAGA,WAAW,MAAS,CAC1E,KAAQ,2CAD2C,sBAIzD,iBAAQ,CACN,GAAM,gBADR,gBAGA,iDAAgC,0BAAYA,WAAW,KAAvB,SAAhC,gCACA,YAAC,IAAD,CAAwBD,QAAQ,4BAKpCH,EAAWK,gBAAiB","file":"component---src-pages-controls-pre-defined-types-mdx-2612225ea7bfeb823f91.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { CommonControlsPropsAPI } from '../../components/api';\nexport const _frontmatter = {\n  \"Title\": \"Pre-defined types\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"pre-defined-control-types\"\n    }}>{`Pre-defined control types`}</h1>\n    <p>{`If you want more than the default timer, the next simpler way is to pass a `}<inlineCode parentName=\"p\">{`controls`}</inlineCode>{` property to your `}<inlineCode parentName=\"p\">{`Model`}</inlineCode>{`.`}</p>\n    <p>{`By doing so, you can use one or more of the `}<em parentName=\"p\">{`pre-defined control types`}</em>{`.`}</p>\n    <p>{`These control types are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-sim/controls/checkbox\"\n        }}>{`Checkbox`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-sim/controls/input\"\n        }}>{`Input`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-sim/controls/toggle\"\n        }}>{`Toggle`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-sim/controls/radio\"\n        }}>{`Radio`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-sim/controls/select\"\n        }}>{`Select`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-sim/controls/range\"\n        }}>{`Range`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-sim/controls/timer\"\n        }}>{`Timer`}</a></li>\n    </ul>\n    <p>{`The `}<inlineCode parentName=\"p\">{`controls`}</inlineCode>{` props can be:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`an object, in which case you are specifying a single control, or`}</li>\n      <li parentName=\"ul\">{`an array, which is how you can `}<a parentName=\"li\" {...{\n          \"href\": \"/react-sim/controls/arranging-controls\"\n        }}>{`arrange controls`}</a></li>\n    </ul>\n    <h1 {...{\n      \"id\": \"common-props\"\n    }}>{`Common props`}</h1>\n    <p>{`All controls, except the `}<inlineCode parentName=\"p\">{`Timer`}</inlineCode>{`, have the following props -`}</p>\n    <CommonControlsPropsAPI mdxType=\"CommonControlsPropsAPI\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}