{"version":3,"sources":["webpack:///./src/pages/controls/select.mdx","webpack:///./src/components/examples/controls-examples.js","webpack:///./src/components/examples/framed-model.js"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","DefaultTimer","NegativeMinTime","minTime","maxTime","HideTimerBlock","showTime","HideTimerSlider","showTimeSlider","ControlFrame","params","otherParams","delay","ticksPerAnimation","tick","Object","keys","length","JSON","stringify","CheckBoxExample","showTimer","initialParams","checked","controls","type","label","param","ToggleExample","CheckAndToggleExample","RadioExample","options","name","SelectExample","SelectAndRadioExample","InputExample","RangeExample","value","TimerExample","RowsOfSlidersExample","a","b","c","SlidersOnTwoRowsExample","CustomControl","withControls","setParams","onChange","e","Number","target","CustomFrame","withFrame","CustomControlExample","flexDirection","CustomRange","setValue","v","minValue","maxValue","step","ControlAsComponent","FullWidthModel","sx","border","p","FitContentModel","width"],"mappings":"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","file":"component---src-pages-controls-select-mdx-f1857235fc5d038c9c19.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { SelectExample, SelectAndRadioExample } from '../../components/examples/controls-examples';\nexport const _frontmatter = {\n  \"Title\": \"Select\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"select\"\n    }}>{`Select`}</h1>\n    <p>{`Select is a drop-down menu with a limited number of options.`}</p>\n    <SelectExample mdxType=\"SelectExample\" />\n    <p>{`Like radio, `}<inlineCode parentName=\"p\">{`select`}</inlineCode>{` also takes:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`options (array of strigs): List of the values that can be chosen.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Model\n  showTimer={false}\n  initialParams={{ options: 'jet' }}\n  controls={[\n    {\n      type: 'select',\n      label: 'Choose one',\n      param: 'options',\n      options: ['jet', 'set', 'radio'],\n    },\n  ]}\n/>\n`}</code></pre>\n    <SelectAndRadioExample mdxType=\"SelectAndRadioExample\" />\n    <p><em parentName=\"p\">{`Select and Radio can be used together on the same param`}</em></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport { withControls, withFrame, Range } from 'react-sim';\nimport { Flex } from 'rebass';\n\nimport { FullWidthModel as Model } from './framed-model';\n\nexport const DefaultTimer = () => (\n  <Model>\n    <div />\n  </Model>\n);\n\nexport const NegativeMinTime = () => (\n  <Model minTime={-10} maxTime={0}>\n    <div />\n  </Model>\n);\n\nexport const HideTimerBlock = () => (\n  <Model showTime={false}>\n    <div />\n  </Model>\n);\n\nexport const HideTimerSlider = () => (\n  <Model showTimeSlider={false}>\n    <div />\n  </Model>\n);\n\nconst ControlFrame = ({\n  params: { delay, minTime, maxTime, ticksPerAnimation, ...otherParams },\n  tick,\n  showTime,\n}) => (\n  <div>\n    {Object.keys(otherParams).length > 0 && (\n      <>\n        <label>params:</label>\n        <pre>{JSON.stringify(otherParams, null, 2)}</pre>\n      </>\n    )}\n    {showTime && <pre>{JSON.stringify({ tick }, null, 2)}</pre>}\n  </div>\n);\n\nexport const CheckBoxExample = () => (\n  <Model\n    showTimer={false}\n    initialParams={{ checked: false }}\n    controls={{\n      type: 'checkbox',\n      label: 'Check me',\n      param: 'checked',\n    }}\n  >\n    <ControlFrame />\n  </Model>\n);\n\nexport const ToggleExample = () => (\n  <Model\n    showTimer={false}\n    initialParams={{ checked: false }}\n    controls={{\n      type: 'toggle',\n      label: 'Toggle me',\n      param: 'checked',\n    }}\n  >\n    <ControlFrame />\n  </Model>\n);\n\nexport const CheckAndToggleExample = () => (\n  <Model\n    showTimer={false}\n    initialParams={{ checked: false }}\n    controls={[\n      [\n        {\n          type: 'checkbox',\n          label: 'Check me again',\n          param: 'checked',\n        },\n        {\n          type: 'toggle',\n          label: 'Toggle me again',\n          param: 'checked',\n        },\n      ],\n    ]}\n  >\n    <ControlFrame />\n  </Model>\n);\n\nexport const RadioExample = () => (\n  <Model\n    showTimer={false}\n    initialParams={{ options: 'jet' }}\n    controls={[\n      {\n        type: 'radio',\n        name: 'radio-example',\n        label: 'Choose one',\n        param: 'options',\n        options: ['jet', 'set', 'radio'],\n      },\n    ]}\n  >\n    <ControlFrame />\n  </Model>\n);\n\nexport const SelectExample = () => (\n  <Model\n    showTimer={false}\n    initialParams={{ options: 'jet' }}\n    controls={[\n      {\n        type: 'select',\n        label: 'Choose one',\n        name: 'select-example',\n        param: 'options',\n        options: ['jet', 'set', 'radio'],\n      },\n    ]}\n  >\n    <ControlFrame />\n  </Model>\n);\n\nexport const SelectAndRadioExample = () => (\n  <Model\n    showTimer={false}\n    initialParams={{ options: 'jet' }}\n    controls={[\n      {\n        type: 'select',\n        label: 'Choose one',\n        name: 'select-example-2',\n        param: 'options',\n        options: ['jet', 'set', 'radio'],\n      },\n      {\n        type: 'radio',\n        label: 'Choose one',\n        name: 'radio-example-2',\n        param: 'options',\n        options: ['jet', 'set', 'radio'],\n      },\n    ]}\n  >\n    <ControlFrame />\n  </Model>\n);\n\nexport const InputExample = () => (\n  <Model\n    showTimer={false}\n    initialParams={{ name: '' }}\n    controls={{\n      type: 'input',\n      label: 'What is your name?',\n      name: 'name',\n      param: 'name',\n    }}\n  >\n    <ControlFrame />\n  </Model>\n);\n\nexport const RangeExample = () => (\n  <Model\n    showTimer={false}\n    initialParams={{ value: 0 }}\n    controls={{\n      type: 'range',\n      label: 'Choose a value',\n      name: 'range',\n      param: 'value',\n    }}\n  >\n    <ControlFrame />\n  </Model>\n);\n\nexport const TimerExample = () => (\n  <Model\n    showTimer={false}\n    controls={{\n      type: 'timer',\n      label: 'My explicit timer',\n    }}\n  >\n    <ControlFrame showTime />\n  </Model>\n);\n\nexport const RowsOfSlidersExample = () => (\n  <Model\n    showTimer={false}\n    initialParams={{ a: 0, b: 0, c: 0 }}\n    controls={[\n      {\n        type: 'range',\n        label: 'A',\n        name: 'a',\n        param: 'a',\n      },\n      {\n        type: 'range',\n        label: 'B',\n        name: 'b',\n        param: 'b',\n      },\n      {\n        type: 'range',\n        label: 'C',\n        name: 'c',\n        param: 'c',\n      },\n    ]}\n  >\n    <ControlFrame />\n  </Model>\n);\n\nexport const SlidersOnTwoRowsExample = () => (\n  <Model\n    showTimer={false}\n    initialParams={{ a: 0, b: 0, c: 0 }}\n    controls={[\n      [\n        {\n          type: 'range',\n          label: 'A',\n          name: 'a',\n          param: 'a',\n        },\n      ],\n      [\n        {\n          type: 'range',\n          label: 'B',\n          name: 'b',\n          param: 'b',\n        },\n        {\n          type: 'range',\n          label: 'C',\n          name: 'c',\n          param: 'c',\n        },\n      ],\n    ]}\n  >\n    <ControlFrame />\n  </Model>\n);\n\nconst MyControl = ({ params, setParams }) => (\n  <input\n    type=\"range\"\n    value={params['my-param']}\n    onChange={e => setParams({ 'my-param': Number(e.target.value) })}\n  />\n);\n\nconst CustomControl = withControls(MyControl);\nconst CustomFrame = withFrame(ControlFrame);\nexport const CustomControlExample = () => (\n  <Model showTimer={false} initialParams={{ 'my-param': 50 }}>\n    <Flex flexDirection=\"column\">\n      <CustomControl />\n      <CustomFrame />\n    </Flex>\n  </Model>\n);\n\nconst MyCustomRange = ({ params, setParams }) => {\n  const value = params['my-param'];\n  const setValue = v => setParams({ 'my-param': v });\n  return (\n    <Range\n      label=\"My range\"\n      value={value}\n      setValue={setValue}\n      minValue={0}\n      maxValue={100}\n      step={1}\n    />\n  );\n};\nconst CustomRange = withControls(MyCustomRange);\n\nexport const ControlAsComponent = () => (\n  <Model showTimer={false} initialParams={{ 'my-param': 50 }}>\n    <Flex flexDirection=\"column\">\n      <CustomFrame />\n      <CustomRange />\n    </Flex>\n  </Model>\n);\n","import React from 'react';\nimport { Model } from 'react-sim';\nimport { Flex } from 'rebass';\n\nexport const FullWidthModel = props => (\n  <Flex sx={{ border: '1px solid currentcolor', p: 2 }}>\n    <Model {...props} />\n  </Flex>\n);\n\nexport const FitContentModel = props => (\n  <Flex sx={{ border: '1px solid currentcolor', p: 2, width: 'fit-content' }}>\n    <Model {...props} />\n  </Flex>\n);\n"],"sourceRoot":""}