{"version":3,"sources":["webpack:///./src/pages/api/range.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"iPAKaA,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,4BAAW,iBAAGC,WAAW,IACrB,KAAQ,uCADD,wBAAX,sBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,iCAGA,kBAAIA,WAAW,KACb,MAAS,MADX,qDAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MACR,sBAAQA,WAAW,MAAnB,YAA6C,uBAFhD,+BAGA,kBAAIA,WAAW,KACb,MAAS,MADX,2DAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,oBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,8DAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MACR,sBAAQA,WAAW,MAAnB,sBAAuD,uBAF1D,yBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,2CAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MACR,sBAAQA,WAAW,MAAnB,yBAA0D,uBAF7D,yBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,6EAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MACR,sBAAQA,WAAW,MAAnB,yBAA0D,uBAF7D,yBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,4EAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MACR,sBAAQA,WAAW,MAAnB,sBAAuD,uBAF1D,yBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,6DAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MACR,sBAAQA,WAAW,MAAnB,uBAAwD,uBAF3D,yBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,oHAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MACR,sBAAQA,WAAW,MAAnB,QAAyC,uBAF5C,+BAGA,kBAAIA,WAAW,KACb,MAAS,MADX,uGAUVJ,EAAWK,gBAAiB","file":"component---src-pages-api-range-mdx-28c3ca8c03a09f4db2b6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`All `}<a parentName=\"p\" {...{\n        \"href\": \"/react-sim/api#common-control-props\"\n      }}>{`Common control props`}</a>{` properties, plus:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`maxValue`}</strong><br />{`number, optional, default 100`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The value corresponding to the end of the range.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`minValue`}</strong><br />{`number, optional, default 0`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The value corresponding to the beginning of the range.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`name`}</strong><br />{`string, optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The name of the control. If not specified, label is used.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`shouldDisplayLabel`}</strong><br />{`boolean, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the label should be displayed.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`shouldDisplayMaxValue`}</strong><br />{`boolean, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the maximum value should be displayed to the right of the range.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`shouldDisplayMinValue`}</strong><br />{`boolean, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the minimum value should be displayed to the left of the range.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`shouldDisplayValue`}</strong><br />{`boolean, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the value should be displayed next to the label.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`shouldDisplaySlider`}</strong><br />{`boolean, default true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Whether the slider should be displayed. If the slider is not displayed, the min and max values are also hidden.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`step`}</strong><br />{`number, optional, default 1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The amount by which the value will be incremeneted or decremented when moving the range cursor.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}