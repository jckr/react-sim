(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{"aA/G":function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return l})),n.d(e,"default",(function(){return c}));var a=n("zLVn"),b=(n("q1tI"),n("7ljp")),r=["components"],l={},i={_frontmatter:l};function c(t){var e=t.components,n=Object(a.a)(t,r);return Object(b.b)("wrapper",Object.assign({},i,n,{components:e,mdxType:"MDXLayout"}),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Name"),Object(b.b)("th",{parentName:"tr",align:null},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},"data"),Object(b.b)("br",null),"any"),Object(b.b)("td",{parentName:"tr",align:null},"Represents the current state of the simulation.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},"tick"),Object(b.b)("br",null),"integer"),Object(b.b)("td",{parentName:"tr",align:null},"A measure of time in the simulation. Each time the simulation updates, ticks increases by one.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},"params"),Object(b.b)("br",null),"Object"),Object(b.b)("td",{parentName:"tr",align:null},"The parameters of the simulation.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},"isPlaying"),Object(b.b)("br",null),"boolean"),Object(b.b)("td",{parentName:"tr",align:null},"Whether the simulation is running or not.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},"results"),Object(b.b)("br",null),"any"),Object(b.b)("td",{parentName:"tr",align:null},"Is updated each time the simulation finishes, and contains information on the past runs.")))),Object(b.b)("p",null,"The difference between ",Object(b.b)("inlineCode",{parentName:"p"},"data")," and ",Object(b.b)("inlineCode",{parentName:"p"},"params")," is that ",Object(b.b)("inlineCode",{parentName:"p"},"data")," is being updated at each simulation tick, without user intervention, through the ",Object(b.b)("inlineCode",{parentName:"p"},"updateData")," function, whereas ",Object(b.b)("inlineCode",{parentName:"p"},"params")," is only modified when the user interacts with the ",Object(b.b)("a",{parentName:"p",href:"/react-sim/controls"},"controls"),"."),Object(b.b)("p",null,"The built-in parameters are:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Name"),Object(b.b)("th",{parentName:"tr",align:null},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},"delay"),Object(b.b)("br",null),"number"),Object(b.b)("td",{parentName:"tr",align:null},"delay between animation refreshes in miliseconds.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},"maxTime"),Object(b.b)("br",null),"integer"),Object(b.b)("td",{parentName:"tr",align:null},"the value of ",Object(b.b)("inlineCode",{parentName:"td"},"tick")," at which the animation stops.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},"minTime"),Object(b.b)("br",null),"integer"),Object(b.b)("td",{parentName:"tr",align:null},"the value of ",Object(b.b)("inlineCode",{parentName:"td"},"tick")," when the animation starts.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},"ticksPerAnimation"),Object(b.b)("br",null),"integer"),Object(b.b)("td",{parentName:"tr",align:null},"the number of simulation ticks per animation refresh. If more than one, the simulation will update several times before it's rendered again.")))))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-model-state-mdx-a807750cdea1823954da.js.map