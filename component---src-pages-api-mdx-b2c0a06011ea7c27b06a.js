(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{BXRP:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return o}));a("rzGZ"),a("Dq+y"),a("8npG"),a("Ggvi"),a("E5k/"),a("q1tI");var n=a("7ljp"),r=a("hoDs");var i={Title:"API reference"},c={_frontmatter:i};function o(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,["components"]);return Object(n.b)("wrapper",Object.assign({},c,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"A single-page reference of all the APIs used throughout ",Object(n.b)("inlineCode",{parentName:"p"},"React-Sim"),"."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object.assign({parentName:"li"},{href:"/react-sim/api#model"}),"Model")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object.assign({parentName:"li"},{href:"/react-sim/api#withframe"}),"withFrame")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object.assign({parentName:"li"},{href:"/react-sim/api#grid"}),"grid")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object.assign({parentName:"li"},{href:"/react-sim/api#canvasframe"}),"canvasFrame")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object.assign({parentName:"li"},{href:"/react-sim/api#timeseries"}),"timeSeries"))),Object(n.b)("h1",{id:"model"},"Model"),Object(n.b)("h2",{id:"usage"},"Usage"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"import {Model} from 'react-sim';\n\nfunction initData = params => { /* ... */ }\nfunction updateData =\n  ({data, params, tick, ...args}) => { /* ... */ }\nconst params = { /* ... */};\nfunction Frame =\n  ({data, params, tick, ...args}) => <>{ /* ... */ }</>;\n\nexport function MyModel = () => <Model\n  initalParams={params}\n  initData={initData}\n  updateData={updateData}\n>\n  <Frame />\n</Model>\n")),Object(n.b)("h2",{id:"state"},"State"),Object(n.b)(r.j,{mdxType:"ModelStateAPI"}),Object(n.b)("h2",{id:"properties"},"Properties"),Object(n.b)(r.i,{mdxType:"ModelPropsAPI"}),Object(n.b)("p",null,"For more information on controls and the syntax of the control object, see ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/controls"}),"Controls"),"."),Object(n.b)("h1",{id:"frame-helpers"},"Frame Helpers"),Object(n.b)("h2",{id:"withframe"},"withFrame"),Object(n.b)("h3",{id:"usage-1"},"Usage"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"import {Model, withFrame} from 'react-sim';\n\nconst FrameComponent = props => <>{ /* ... */ }</>;\nconst Frame = withFrame(FrameComponent);\n\nexport function MyModel = () => <Model>\n  <Frame />\n</Model>\n")),Object(n.b)("h3",{id:"api"},"API"),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"withFrame")," is a wrapper around a ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/frames"}),"Frame")," component."),Object(n.b)("p",null,"Wrapping a component with ",Object(n.b)("inlineCode",{parentName:"p"},"withFrame")," will expose the connected component to the following properties:\nThese properties come from the state of the ",Object(n.b)("inlineCode",{parentName:"p"},"Model")," this component is a descendant of."),Object(n.b)(r.s,{mdxType:"WithFrameAPI"}),Object(n.b)("p",null,"For convenience, a component which is a direct child of a ",Object(n.b)("inlineCode",{parentName:"p"},"Model")," automatically receives these properties without ",Object(n.b)("inlineCode",{parentName:"p"},"withFrame"),"."),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"import {Model, withFrame} from 'react-sim';\n\nconst FrameComponent = props => <>{ /* ... */ }</>;\nconst Frame = withFrame(FrameComponent);\n\nexport function MyModel = () => <Model>\n  {/* this component has access to frame props */}\n  <FrameComponent />\n  <div>\n    {/* this one doesn't, because it's not a direct child */}\n    <FrameComponent />\n    {/* this component has access to frame props, because it's connected */}\n    <Frame />\n  </div>\n</Model>\n")),Object(n.b)("h2",{id:"grid"},"Grid"),Object(n.b)("p",null,"see ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/frame-helpers/grid"}),"Grid guide")),Object(n.b)("h3",{id:"usage-2"},"Usage"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"  import {Model, Grid} from 'react-sim';\n\n  export function MyModel = () => <Model>\n    <Grid />\n  </Model>\n")),Object(n.b)("h3",{id:"api-1"},"API"),Object(n.b)(r.g,{mdxType:"GridAPI"}),Object(n.b)("h3",{id:"gridcomponent"},"GridComponent"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"import { GridComponent } from 'react-sim';\n")),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"Grid")," is wrapped with ",Object(n.b)("inlineCode",{parentName:"p"},"withFrame")," so it can be used anywhere in the tree. The corresponding, unwrapped component, ",Object(n.b)("inlineCode",{parentName:"p"},"GridComponent"),", can also be exported from ",Object(n.b)("inlineCode",{parentName:"p"},"react-sim"),"."),Object(n.b)("h2",{id:"canvasframe"},"CanvasFrame"),Object(n.b)("p",null,"see ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/frame-helpers/canvas-frame"}),"CanvasFrame guide")),Object(n.b)("h3",{id:"usage-3"},"Usage"),Object(n.b)("pre",null,Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"  import {Model, CanvasFrame} from 'react-sim';\n\n  function draw({ctx, data, ...args}) => {\n    /* canvas operations */\n  }\n\n  export function MyModel = () => <Model>\n    <CanvasFrame draw={draw} />\n  </Model>\n")),Object(n.b)("h3",{id:"api-2"},"API"),Object(n.b)(r.a,{mdxType:"CanvasFrameAPI"}),Object(n.b)("h3",{id:"circle"},"Circle"),Object(n.b)(r.b,{mdxType:"CircleAPI"}),Object(n.b)("h3",{id:"roundrectangle"},"RoundRectangle"),Object(n.b)(r.m,{mdxType:"RoundRectangleAPI"}),Object(n.b)("h3",{id:"draw"},"Draw"),Object(n.b)(r.f,{mdxType:"DrawAPI"}),Object(n.b)("h2",{id:"timeseries"},"TimeSeries"),Object(n.b)("p",null,"see ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/frame-helpers/time-series"}),"TimeSeries guide"),"."),Object(n.b)("h3",{id:"series"},"Series"),Object(n.b)(r.o,{mdxType:"SeriesAPI"}),Object(n.b)("h3",{id:"timeseries-1"},"TimeSeries"),Object(n.b)(r.p,{mdxType:"TimeSeriesAPI"}),Object(n.b)("h3",{id:"counter"},"Counter"),Object(n.b)(r.d,{mdxType:"CounterAPI"}),Object(n.b)("h3",{id:"indicator"},"Indicator"),Object(n.b)(r.h,{mdxType:"IndicatorAPI"}),Object(n.b)("h2",{id:"controls"},"Controls"),Object(n.b)("p",null,"See ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/controls"}),"Controls guide"),"."),Object(n.b)("h3",{id:"withcontrols"},"withControls"),Object(n.b)("p",null,"Components wrapped with ",Object(n.b)("inlineCode",{parentName:"p"},"withControls")," gain access to the following properties:"),Object(n.b)(r.r,{mdxType:"WithControlsAPI"}),Object(n.b)("h3",{id:"common-controls-properties"},"Common Controls Properties"),Object(n.b)("p",null,"Unless otherwise specified, all built-in controls have the following properties:"),Object(n.b)(r.c,{mdxType:"CommonControlsPropsAPI"}),Object(n.b)("h3",{id:"range"},"Range"),Object(n.b)("p",null,"See the ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/controls/range"}),"Range guide"),"."),Object(n.b)(r.l,{mdxType:"RangeAPI"}),Object(n.b)("h3",{id:"timer"},"Timer"),Object(n.b)("h4",{id:"default-timer"},"Default Timer"),Object(n.b)("p",null,"See the ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/controls/default-timer"}),"Default timer guide"),"."),Object(n.b)("p",null,"By default a ",Object(n.b)("inlineCode",{parentName:"p"},"Model")," comes with a built-in ",Object(n.b)("inlineCode",{parentName:"p"},"Timer")," control. For this defaut ",Object(n.b)("inlineCode",{parentName:"p"},"Timer"),", the following props come directly from ",Object(n.b)("inlineCode",{parentName:"p"},"Model")," (see ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/api/#model"}),"Model properties"),".)"),Object(n.b)(r.e,{mdxType:"DefaultTimerAPI"}),Object(n.b)("h4",{id:"general-case"},"General case"),Object(n.b)("p",null,"See the ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/controls/timer"}),"Timer guide"),"."),Object(n.b)("p",null,"If the ",Object(n.b)("inlineCode",{parentName:"p"},"Timer")," is defined anywhere else, these properties can be passed to the ",Object(n.b)("inlineCode",{parentName:"p"},"Timer")," directly."),Object(n.b)(r.q,{mdxType:"TimerAPI"}),Object(n.b)("h3",{id:"checkbox"},"Checkbox"),Object(n.b)("p",null,"See the ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/controls/checkbox"}),"Checkbox guide.")),Object(n.b)("p",null,"Its API is solely the ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/api#common-controls-properties"}),"Common Control Props.")),Object(n.b)("h3",{id:"input"},"Input"),Object(n.b)("p",null,"See the ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/controls/input"}),"Input guide.")),Object(n.b)("p",null,"Its API is solely the ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/api#common-controls-properties"}),"Common Control Props.")),Object(n.b)("h3",{id:"radio"},"Radio"),Object(n.b)("p",null,"See the ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/controls/radio"}),"Radio guide.")),Object(n.b)(r.k,{mdxType:"RadioAPI"}),Object(n.b)("h3",{id:"select"},"Select"),Object(n.b)("p",null,"See the ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/controls/select"}),"Select guide.")),Object(n.b)(r.n,{mdxType:"SelectAPI"}),Object(n.b)("h3",{id:"toggle"},"Toggle"),Object(n.b)("p",null,"See the ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/controls/toggle"}),"Toggle guide.")),Object(n.b)("p",null,"Its API is solely the ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"/react-sim/api#common-controls-properties"}),"Common Control Props.")))}o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-mdx-b2c0a06011ea7c27b06a.js.map